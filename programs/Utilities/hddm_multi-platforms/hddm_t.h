/*
 * hddm_t.h - DO NOT EDIT THIS FILE
 *
 * This file was generated automatically from the file ex1.xml by hddm-c.
 * This header file defines the c structures that hold the data described
 * in the data model (from ex1.xml).  Any program that needs access to the
 * data described in the model can include this header file, and make use
 * of the input/output services provided inhddm_t.c
 *
 * The hddm data model tool set was written by
 * Richard Jones, University of Connecticut.
 *
 * For more information see the following web site
 *
 * http://zeus.phys.uconn.edu/halld/datamodel/doc
 *
 */

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <particleType.h>

#ifndef SAW_t_Hit_t
#define SAW_t_Hit_t

typedef struct {
   float                t;
   float                dE;
} t_Hit_t;

typedef struct {
   int mult;
   t_Hit_t in[1];
} t_Hits_t;
#endif /* t_Hit_t */

#ifndef SAW_t_Side_t
#define SAW_t_Side_t

typedef struct {
   int                  end;
   t_Hits_t*            hits;
} t_Side_t;

typedef struct {
   int mult;
   t_Side_t in[1];
} t_Sides_t;
#endif /* t_Side_t */

#ifndef SAW_t_Slab_t
#define SAW_t_Slab_t

typedef struct {
   float                y;
   t_Sides_t*           sides;
} t_Slab_t;

typedef struct {
   int mult;
   t_Slab_t in[1];
} t_Slabs_t;
#endif /* t_Slab_t */

#ifndef SAW_t_ForwardTOF_t
#define SAW_t_ForwardTOF_t

typedef struct {
   t_Slabs_t*           slabs;
} t_ForwardTOF_t;
#endif /* t_ForwardTOF_t */

#ifndef SAW_t_HDDM_t
#define SAW_t_HDDM_t

typedef struct {
   t_ForwardTOF_t*      forwardTOF;
} t_HDDM_t;
#endif /* t_HDDM_t */

t_Hits_t* make_t_Hits(int n);

t_Sides_t* make_t_Sides(int n);

t_Slabs_t* make_t_Slabs(int n);

t_ForwardTOF_t* make_t_ForwardTOF();

t_HDDM_t* make_t_HDDM();

#ifndef t_DocumentString
#define t_DocumentString

extern char HDDM_t_DocumentString[];

#endif /* t_DocumentString */

#ifndef HDDM_STREAM_INPUT
#define HDDM_STREAM_INPUT -91
#define HDDM_STREAM_OUTPUT -92

typedef struct {
   FILE* fd;
   int iomode;
   char* hddm;
   char* filename;
   int sections;
   void* (*unpacker[10000])();
   int modelLevel[10000];
   int ptrOffset[10000];
} t_iostream;

#endif /* HDDM_STREAM_INPUT */

t_HDDM_t* read_t_HDDM(t_iostream* fp);

int flush_t_HDDM(t_HDDM_t* p,t_iostream* fp);

t_iostream* open_t_HDDM(char* filename);

t_iostream* init_t_HDDM(char* filename);

void close_t_HDDM(t_iostream* fp);
