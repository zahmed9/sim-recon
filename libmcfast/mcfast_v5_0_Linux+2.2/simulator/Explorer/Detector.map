#!/usr/explorer/bin/explorer cxNetResources ascii 3.0
#Tag 0x10603

(cxNetResources
    {	(appState =cxNRApp
	    {	(isMainWinMapped =cxBoolean cx_false)
		(isNetEdMapped =cxBoolean cx_false)
		(isLibrarianMapped =cxBoolean cx_false)
	    }
	)
	(numModules 4)
	(modules @0)
	(numConnects 4)
	(connects @1)
	(numInputs 0)
	(numOutputs 0)
	(startupScript NULL)
    }
)
(@0 =cxNRModule [4]
    {	(name "DetDisplay")
	(instanceName "DetDisplay")
	(parent "netRoot")
	(host "localhost")
	(path ".")
	(isSelected =cxBoolean cx_false)
	(isEnabled =cxBoolean cx_true)
	(openedGroup =cxBoolean cx_true)
	(isLoopController =cxBoolean cx_false)
	(numPanels 1)
	(panelState @2)
	(numInAliases 0)
	(numOutAliases 0)
	(numPFuncs 0)
    }
    {	(name "DetPick")
	(instanceName "DetPick")
	(parent "netRoot")
	(host "localhost")
	(path ".")
	(isSelected =cxBoolean cx_false)
	(isEnabled =cxBoolean cx_true)
	(openedGroup =cxBoolean cx_true)
	(isLoopController =cxBoolean cx_false)
	(numPanels 1)
	(panelState @3)
	(numInAliases 0)
	(numOutAliases 0)
	(numPFuncs 0)
    }
    {	(name "Render")
	(instanceName "Render")
	(parent "netRoot")
	(host "localhost")
	(path "/usr/explorer/opengl/modules")
	(isSelected =cxBoolean cx_true)
	(isEnabled =cxBoolean cx_true)
	(openedGroup =cxBoolean cx_true)
	(isLoopController =cxBoolean cx_true)
	(numPanels 1)
	(panelState @4)
	(numInAliases 0)
	(numOutAliases 0)
	(numPFuncs 0)
    }
    {	(name "ColorEditor")
	(instanceName "ColorEditor")
	(parent "netRoot")
	(host "localhost")
	(path "/usr/explorer/opengl/modules")
	(isSelected =cxBoolean cx_false)
	(isEnabled =cxBoolean cx_true)
	(openedGroup =cxBoolean cx_true)
	(isLoopController =cxBoolean cx_false)
	(numPanels 1)
	(panelState @5)
	(numInAliases 0)
	(numOutAliases 0)
	(numPFuncs 0)
    }
)
(@1 =cxNRConnect [4]
    {	(source =cxNRDest
	    {	(module "DetDisplay")
		(port "geom")
	    }
	)
	(destination =cxNRDest
	    {	(module "Render")
		(port "Input")
	    }
	)
    }
    {	(source =cxNRDest
	    {	(module "Render")
		(port "Pick")
	    }
	)
	(destination =cxNRDest
	    {	(module "DetPick")
		(port "Input Pick")
	    }
	)
    }
    {	(source =cxNRDest
	    {	(module "DetPick")
		(port "DetLabel")
	    }
	)
	(destination =cxNRDest
	    {	(module "DetDisplay")
		(port "DetName")
	    }
	)
    }
    {	(source =cxNRDest
	    {	(module "ColorEditor")
		(port "Color")
	    }
	)
	(destination =cxNRDest
	    {	(module "DetDisplay")
		(port "Color")
	    }
	)
    }
)
(@2 =cxNRPanel [1]
    {	(title "DetDisplay")
	(maxiSize =cxWidgetSize
	    {	(width 675)
		(height 695)
	    }
	)
	(maxiPosition =cxWidgetPos
	    {	(x -176)
		(y 228)
	    }
	)
	(isMaxiMapped =cxBoolean cx_true)
	(miniPosition =cxWidgetPos
	    {	(x 189)
		(y 76)
	    }
	)
	(isMicro =cxBoolean cx_false)
	(numWidgets 23)
	(widgets @6)
    }
)
(@3 =cxNRPanel [1]
    {	(title "DetPick")
	(maxiSize =cxWidgetSize
	    {	(width 245)
		(height 205)
	    }
	)
	(maxiPosition =cxWidgetPos
	    {	(x 0)
		(y 0)
	    }
	)
	(isMaxiMapped =cxBoolean cx_false)
	(miniPosition =cxWidgetPos
	    {	(x 649)
		(y 76)
	    }
	)
	(isMicro =cxBoolean cx_false)
	(numWidgets 2)
	(widgets @7)
    }
)
(@4 =cxNRPanel [1]
    {	(title "Render")
	(maxiSize =cxWidgetSize
	    {	(width 217)
		(height 237)
	    }
	)
	(maxiPosition =cxWidgetPos
	    {	(x 0)
		(y 0)
	    }
	)
	(isMaxiMapped =cxBoolean cx_false)
	(miniPosition =cxWidgetPos
	    {	(x 531)
		(y 196)
	    }
	)
	(isMicro =cxBoolean cx_false)
	(numWidgets 2)
	(widgets @8)
    }
)
(@5 =cxNRPanel [1]
    {	(title "ColorEditor")
	(maxiSize =cxWidgetSize
	    {	(width 165)
		(height 265)
	    }
	)
	(maxiPosition =cxWidgetPos
	    {	(x 0)
		(y 0)
	    }
	)
	(isMaxiMapped =cxBoolean cx_false)
	(miniPosition =cxWidgetPos
	    {	(x 16)
		(y 16)
	    }
	)
	(isMicro =cxBoolean cx_false)
	(numWidgets 3)
	(widgets @9)
    }
)
(@6 =cxWidgetRes [23]
    {	(name NULL)
	(port "Visibility")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_radio_box)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 72)
			(y 105)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 145)
			(y 210)
		    }
		)
	    }
	)
	(t cx_widget_radio_box
	    {	(d =cxWidgetRadioBox
		    {	(nMembers 0)
			(initVal 0)
			(orientation =cxOrientation cx_horizontal)
		    }
		)
	    }
	)
    }
    {	(name NULL)
	(port NULL)
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_v_sep)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 180)
			(y 5)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 360)
			(y 10)
		    }
		)
	    }
	)
	(t cx_widget_v_sep
	)
    }
    {	(name NULL)
	(port NULL)
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_label)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 77)
			(y 90)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 155)
			(y 180)
		    }
		)
	    }
	)
	(t cx_widget_label
	    {	(initVal NULL)
	    }
	)
    }
    {	(name NULL)
	(port "List")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_scroll_list)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 7)
			(y 172)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 15)
			(y 345)
		    }
		)
	    }
	)
	(t cx_widget_scroll_list
	    {	(d =cxWidgetScrollList
		    {	(initVal "")
			(selectable =cxBoolean cx_false)
			(addEnabled =cxBoolean cx_false)
			(numDisplayed 18)
			(selectionMode 2)
			(maxEntries 40)
			(numEntries 52)
			(entries @10)
			(numSelected 0)
		    }
		)
	    }
	)
    }
    {	(name NULL)
	(port "Nodisplay")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_button)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 127)
			(y 142)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 255)
			(y 285)
		    }
		)
	    }
	)
	(t cx_widget_button
	)
    }
    {	(name NULL)
	(port "ConfigFile")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_file_browser)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 192)
			(y 205)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 385)
			(y 410)
		    }
		)
	    }
	)
	(t cx_widget_file_browser
	    {	(d =cxWidgetFileBrowser
		    {	(directory "/home/sim1/cope/explorer/detector2/")
			(pattern "*")
			(typeAllowed cx_file_only)
			(fileMustExist =cxBoolean cx_false)
		    }
		)
	    }
	)
    }
    {	(name NULL)
	(port "CutAngleStart")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_dial)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 50)
			(y 17)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 100)
			(y 35)
		    }
		)
	    }
	)
	(t cx_widget_dial
	    {	(d =cxWidgetScalar
		    {	(discrete =cxBoolean cx_false)
			(boundedMin =cxBoolean cx_false)
			(boundedMax =cxBoolean cx_false)
			(dataType =cxPrimType cx_prim_double)
			(t cx_prim_double
			    {	(minVal 0)
				(maxVal 360)
				(step 0)
				(initVal 0)
			    }
			)
			(orientation =cxOrientation cx_horizontal)
		    }
		)
	    }
	)
    }
    {	(name NULL)
	(port "CutAngleEnd")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_dial)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 115)
			(y 17)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 230)
			(y 35)
		    }
		)
	    }
	)
	(t cx_widget_dial
	    {	(d =cxWidgetScalar
		    {	(discrete =cxBoolean cx_false)
			(boundedMin =cxBoolean cx_false)
			(boundedMax =cxBoolean cx_false)
			(dataType =cxPrimType cx_prim_double)
			(t cx_prim_double
			    {	(minVal 0)
				(maxVal 360)
				(step 0)
				(initVal 360)
			    }
			)
			(orientation =cxOrientation cx_horizontal)
		    }
		)
	    }
	)
    }
    {	(name NULL)
	(port NULL)
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_label)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 107)
			(y 175)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 215)
			(y 350)
		    }
		)
	    }
	)
	(t cx_widget_label
	    {	(initVal NULL)
	    }
	)
    }
    {	(name NULL)
	(port NULL)
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_h_sep)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 192)
			(y 145)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 385)
			(y 290)
		    }
		)
	    }
	)
	(t cx_widget_h_sep
	)
    }
    {	(name NULL)
	(port NULL)
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_label)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 5)
			(y 12)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 10)
			(y 25)
		    }
		)
	    }
	)
	(t cx_widget_label
	    {	(initVal NULL)
	    }
	)
    }
    {	(name NULL)
	(port NULL)
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_h_sep)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 5)
			(y 80)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 10)
			(y 160)
		    }
		)
	    }
	)
	(t cx_widget_h_sep
	)
    }
    {	(name NULL)
	(port NULL)
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_label)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 215)
			(y 152)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 430)
			(y 305)
		    }
		)
	    }
	)
	(t cx_widget_label
	    {	(initVal NULL)
	    }
	)
    }
    {	(name NULL)
	(port NULL)
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_h_sep)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 5)
			(y 162)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 10)
			(y 325)
		    }
		)
	    }
	)
	(t cx_widget_h_sep
	)
    }
    {	(name NULL)
	(port "Nsides")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_text)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 135)
			(y 90)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 270)
			(y 180)
		    }
		)
	    }
	)
	(t cx_widget_text
	    {	(initVal "12")
	    }
	)
    }
    {	(name NULL)
	(port "Cutaway")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_radio_box)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 5)
			(y 27)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 10)
			(y 55)
		    }
		)
	    }
	)
	(t cx_widget_radio_box
	    {	(d =cxWidgetRadioBox
		    {	(nMembers 0)
			(initVal 1)
			(orientation =cxOrientation cx_horizontal)
		    }
		)
	    }
	)
    }
    {	(name NULL)
	(port "Green")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_slider)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 112)
			(y 235)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 225)
			(y 470)
		    }
		)
	    }
	)
	(t cx_widget_slider
	    {	(d =cxWidgetScalar
		    {	(discrete =cxBoolean cx_false)
			(boundedMin =cxBoolean cx_false)
			(boundedMax =cxBoolean cx_false)
			(dataType =cxPrimType cx_prim_double)
			(t cx_prim_double
			    {	(minVal 0)
				(maxVal 1)
				(step 0)
				(initVal 1)
			    }
			)
			(orientation =cxOrientation cx_horizontal)
		    }
		)
	    }
	)
    }
    {	(name NULL)
	(port "RWconfig")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_radio_box)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 202)
			(y 172)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 405)
			(y 345)
		    }
		)
	    }
	)
	(t cx_widget_radio_box
	    {	(d =cxWidgetRadioBox
		    {	(nMembers 0)
			(initVal 0)
			(orientation =cxOrientation cx_horizontal)
		    }
		)
	    }
	)
    }
    {	(name NULL)
	(port "Blue")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_slider)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 112)
			(y 275)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 225)
			(y 550)
		    }
		)
	    }
	)
	(t cx_widget_slider
	    {	(d =cxWidgetScalar
		    {	(discrete =cxBoolean cx_false)
			(boundedMin =cxBoolean cx_false)
			(boundedMax =cxBoolean cx_false)
			(dataType =cxPrimType cx_prim_double)
			(t cx_prim_double
			    {	(minVal 0)
				(maxVal 1)
				(step 0)
				(initVal 1)
			    }
			)
			(orientation =cxOrientation cx_horizontal)
		    }
		)
	    }
	)
    }
    {	(name NULL)
	(port "Red")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_slider)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 112)
			(y 197)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 225)
			(y 395)
		    }
		)
	    }
	)
	(t cx_widget_slider
	    {	(d =cxWidgetScalar
		    {	(discrete =cxBoolean cx_false)
			(boundedMin =cxBoolean cx_false)
			(boundedMax =cxBoolean cx_false)
			(dataType =cxPrimType cx_prim_double)
			(t cx_prim_double
			    {	(minVal 0)
				(maxVal 1)
				(step 0)
				(initVal 1)
			    }
			)
			(orientation =cxOrientation cx_horizontal)
		    }
		)
	    }
	)
    }
    {	(name NULL)
	(port "geom_filename")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_file_browser)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 202)
			(y 15)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 405)
			(y 30)
		    }
		)
	    }
	)
	(t cx_widget_file_browser
	    {	(d =cxWidgetFileBrowser
		    {	(directory "~cope/mcfast/dev/")
			(pattern "cdf_dev.dat")
			(typeAllowed cx_file_only)
			(fileMustExist =cxBoolean cx_false)
		    }
		)
	    }
	)
    }
    {	(name NULL)
	(port "Display")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_button)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 127)
			(y 120)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 255)
			(y 240)
		    }
		)
	    }
	)
	(t cx_widget_button
	)
    }
    {	(name NULL)
	(port "Transparency")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_dial)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 7)
			(y 92)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 15)
			(y 185)
		    }
		)
	    }
	)
	(t cx_widget_dial
	    {	(d =cxWidgetScalar
		    {	(discrete =cxBoolean cx_false)
			(boundedMin =cxBoolean cx_false)
			(boundedMax =cxBoolean cx_false)
			(dataType =cxPrimType cx_prim_double)
			(t cx_prim_double
			    {	(minVal 0)
				(maxVal 1)
				(step 0)
				(initVal 1)
			    }
			)
			(orientation =cxOrientation cx_horizontal)
		    }
		)
	    }
	)
    }
)
(@7 =cxWidgetRes [2]
    {	(name NULL)
	(port "detectors")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_text)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 7)
			(y 55)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 15)
			(y 110)
		    }
		)
	    }
	)
	(t cx_widget_text
	    {	(initVal "")
	    }
	)
    }
    {	(name NULL)
	(port NULL)
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_label)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 5)
			(y 5)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 10)
			(y 10)
		    }
		)
	    }
	)
	(t cx_widget_label
	    {	(initVal NULL)
	    }
	)
    }
)
(@8 =cxWidgetRes [2]
    {	(name NULL)
	(port "Window")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_gl)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 5)
			(y 5)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 10)
			(y 10)
		    }
		)
	    }
	)
	(t cx_widget_gl
	)
    }
    {	(name NULL)
	(port "Snap")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_button)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 5)
			(y 5)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 10)
			(y 10)
		    }
		)
	    }
	)
	(t cx_widget_button
	)
    }
)
(@9 =cxWidgetRes [3]
    {	(name NULL)
	(port "Color Window")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_gl)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 5)
			(y 7)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 10)
			(y 15)
		    }
		)
	    }
	)
	(t cx_widget_gl
	)
    }
    {	(name NULL)
	(port "Color Editor")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_button)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 10)
			(y 12)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 20)
			(y 25)
		    }
		)
	    }
	)
	(t cx_widget_button
	)
    }
    {	(name NULL)
	(port "Color Name")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_scroll_list)
	(label NULL)
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 5)
			(y 40)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_false)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 10)
			(y 80)
		    }
		)
	    }
	)
	(t cx_widget_scroll_list
	    {	(d =cxWidgetScrollList
		    {	(initVal "white")
			(selectable =cxBoolean cx_false)
			(addEnabled =cxBoolean cx_false)
			(numDisplayed 9)
			(selectionMode 0)
			(maxEntries 40)
			(numEntries 897)
			(entries @11)
			(numSelected 1)
			(selected @12)
		    }
		)
	    }
	)
    }
)
(@10 [52] "dev1_beam" "dev2_ACMP" "dev3_BAB1" "dev4_FAB1" "dev5_BAB2" "dev6_FAB2"
"dev7_Sole" "dev8_DRFT" "dev9_BSI " "dev10_BSI " "dev11_BSI " "dev12_BSI "
"dev13_BSI " "dev14_BSI " "dev15_BSI " "dev16_BSI " "dev17_BSI " "dev18_BSI "
"dev19_BSI " "dev20_BSI " "dev21_BSI " "dev22_BSI " "dev23_BSI " "dev24_BSI "
"dev25_" "dev26_" "dev27_" "dev28_" "dev29_" "dev30_" "dev31_" "dev32_"
"dev33_Bemc" "dev34_PEMB" "dev35_PEMF" "dev36_BHAC" "dev37_WHAB" "dev38_WHAF"
"dev39_PHB1" "dev40_PHF1" "dev41_PHB2" "dev42_PHF2" "dev43_CMU " "dev44_CMP "
"dev45_CMX1" "dev46_CMX2" "dev47_BMU1" "dev48_FMU1" "dev49_BMU2" "dev50_FMU2"
"dev51_BMU3" "dev52_FMU3")
(@11 [897] "alice blue" "aliceblue" "antique white" "antiquewhite" "antiquewhite1"
"antiquewhite2" "antiquewhite3" "antiquewhite4" "aquamarine" "aquamarine1"
"aquamarine2" "aquamarine3" "aquamarine4" "azure" "azure1" "azure2" "azure3"
"azure4" "beige" "bisque" "bisque1" "bisque2" "bisque3" "bisque4" "black"
"blanched almond" "blanchedalmond" "blue" "blue violet" "blue1" "blue2"
"blue3" "blue4" "blueviolet" "brown" "brown1" "brown2" "brown3" "brown4"
"burlywood" "burlywood1" "burlywood2" "burlywood3" "burlywood4" "cadet blue"
"cadetblue" "cadetblue1" "cadetblue2" "cadetblue3" "cadetblue4" "chartreuse"
"chartreuse1" "chartreuse2" "chartreuse3" "chartreuse4" "chocolate" "chocolate1"
"chocolate2" "chocolate3" "chocolate4" "coral" "coral1" "coral2" "coral3"
"coral4" "cornflower blue" "cornflowerblue" "cornsilk" "cornsilk1" "cornsilk2"
"cornsilk3" "cornsilk4" "crimson" "cyan" "cyan1" "cyan2" "cyan3" "cyan4"
"dark blue" "dark cyan" "dark goldenrod" "dark gray" "dark green" "dark grey"
"dark khaki" "dark magenta" "dark olive green" "dark orange" "dark orchid"
"dark red" "dark salmon" "dark sea green" "dark slate blue" "dark slate gray"
"dark slate grey" "dark turquoise" "dark violet" "darkblue" "darkcyan" "darkgoldenrod"
"darkgoldenrod1" "darkgoldenrod2" "darkgoldenrod3" "darkgoldenrod4" "darkgray"
"darkgreen" "darkgrey" "darkkhaki" "darkmagenta" "darkolivegreen" "darkolivegreen1"
"darkolivegreen2" "darkolivegreen3" "darkolivegreen4" "darkorange" "darkorange1"
"darkorange2" "darkorange3" "darkorange4" "darkorchid" "darkorchid1" "darkorchid2"
"darkorchid3" "darkorchid4" "darkred" "darksalmon" "darkseagreen" "darkseagreen1"
"darkseagreen2" "darkseagreen3" "darkseagreen4" "darkslateblue" "darkslategray"
"darkslategray1" "darkslategray2" "darkslategray3" "darkslategray4" "darkslategrey"
"darkturquoise" "darkviolet" "deep pink" "deep sky blue" "deeppink" "deeppink1"
"deeppink2" "deeppink3" "deeppink4" "deepskyblue" "deepskyblue1" "deepskyblue2"
"deepskyblue3" "deepskyblue4" "dim gray" "dim grey" "dimgray" "dimgrey"
"dodger blue" "dodgerblue" "dodgerblue1" "dodgerblue2" "dodgerblue3" "dodgerblue4"
"firebrick" "firebrick1" "firebrick2" "firebrick3" "firebrick4" "floral white"
"floralwhite" "forest green" "forestgreen" "gainsboro" "ghost white" "ghostwhite"
"gold" "gold1" "gold2" "gold3" "gold4" "goldenrod" "goldenrod1" "goldenrod2"
"goldenrod3" "goldenrod4" "gray" "gray0" "gray1" "gray10" "gray100" "gray11"
"gray12" "gray13" "gray14" "gray15" "gray16" "gray17" "gray18" "gray19"
"gray2" "gray20" "gray21" "gray22" "gray23" "gray24" "gray25" "gray26" "gray27"
"gray28" "gray29" "gray3" "gray30" "gray31" "gray32" "gray33" "gray34" "gray35"
"gray36" "gray37" "gray38" "gray39" "gray4" "gray40" "gray41" "gray42" "gray43"
"gray44" "gray45" "gray46" "gray47" "gray48" "gray49" "gray5" "gray50" "gray51"
"gray52" "gray53" "gray54" "gray55" "gray56" "gray57" "gray58" "gray59"
"gray6" "gray60" "gray61" "gray62" "gray63" "gray64" "gray65" "gray66" "gray67"
"gray68" "gray69" "gray7" "gray70" "gray71" "gray72" "gray73" "gray74" "gray75"
"gray76" "gray77" "gray78" "gray79" "gray8" "gray80" "gray81" "gray82" "gray83"
"gray84" "gray85" "gray86" "gray87" "gray88" "gray89" "gray9" "gray90" "gray91"
"gray92" "gray93" "gray94" "gray95" "gray96" "gray97" "gray98" "gray99"
"green" "green yellow" "green1" "green2" "green3" "green4" "greenyellow"
"grey" "grey0" "grey1" "grey10" "grey100" "grey11" "grey12" "grey13" "grey14"
"grey15" "grey16" "grey17" "grey18" "grey19" "grey2" "grey20" "grey21" "grey22"
"grey23" "grey24" "grey25" "grey26" "grey27" "grey28" "grey29" "grey3" "grey30"
"grey31" "grey32" "grey33" "grey34" "grey35" "grey36" "grey37" "grey38"
"grey39" "grey4" "grey40" "grey41" "grey42" "grey43" "grey44" "grey45" "grey46"
"grey47" "grey48" "grey49" "grey5" "grey50" "grey51" "grey52" "grey53" "grey54"
"grey55" "grey56" "grey57" "grey58" "grey59" "grey6" "grey60" "grey61" "grey62"
"grey63" "grey64" "grey65" "grey66" "grey67" "grey68" "grey69" "grey7" "grey70"
"grey71" "grey72" "grey73" "grey74" "grey75" "grey76" "grey77" "grey78"
"grey79" "grey8" "grey80" "grey81" "grey82" "grey83" "grey84" "grey85" "grey86"
"grey87" "grey88" "grey89" "grey9" "grey90" "grey91" "grey92" "grey93" "grey94"
"grey95" "grey96" "grey97" "grey98" "grey99" "honeydew" "honeydew1" "honeydew2"
"honeydew3" "honeydew4" "hot pink" "hotpink" "hotpink1" "hotpink2" "hotpink3"
"hotpink4" "indian red" "indianred" "indianred1" "indianred2" "indianred3"
"indianred4" "indigo" "indigo2" "ivory" "ivory1" "ivory2" "ivory3" "ivory4"
"khaki" "khaki1" "khaki2" "khaki3" "khaki4" "lavender" "lavender blush"
"lavenderblush" "lavenderblush1" "lavenderblush2" "lavenderblush3" "lavenderblush4"
"lawn green" "lawngreen" "lemon chiffon" "lemonchiffon" "lemonchiffon1"
"lemonchiffon2" "lemonchiffon3" "lemonchiffon4" "light blue" "light coral"
"light cyan" "light goldenrod" "light goldenrod yellow" "light gray" "light green"
"light grey" "light pink" "light salmon" "light sea green" "light sky blue"
"light slate blue" "light slate gray" "light slate grey" "light steel blue"
"light yellow" "lightblue" "lightblue1" "lightblue2" "lightblue3" "lightblue4"
"lightcoral" "lightcyan" "lightcyan1" "lightcyan2" "lightcyan3" "lightcyan4"
"lightgoldenrod" "lightgoldenrod1" "lightgoldenrod2" "lightgoldenrod3" "lightgoldenrod4"
"lightgoldenrodyellow" "lightgray" "lightgreen" "lightgrey" "lightpink"
"lightpink1" "lightpink2" "lightpink3" "lightpink4" "lightsalmon" "lightsalmon1"
"lightsalmon2" "lightsalmon3" "lightsalmon4" "lightseagreen" "lightskyblue"
"lightskyblue1" "lightskyblue2" "lightskyblue3" "lightskyblue4" "lightslateblue"
"lightslategray" "lightslategrey" "lightsteelblue" "lightsteelblue1" "lightsteelblue2"
"lightsteelblue3" "lightsteelblue4" "lightyellow" "lightyellow1" "lightyellow2"
"lightyellow3" "lightyellow4" "lime green" "limegreen" "linen" "magenta"
"magenta1" "magenta2" "magenta3" "magenta4" "maroon" "maroon1" "maroon2"
"maroon3" "maroon4" "medium aquamarine" "medium blue" "medium orchid" "medium purple"
"medium sea green" "medium slate blue" "medium spring green" "medium turquoise"
"medium violet red" "mediumaquamarine" "mediumblue" "mediumorchid" "mediumorchid1"
"mediumorchid2" "mediumorchid3" "mediumorchid4" "mediumpurple" "mediumpurple1"
"mediumpurple2" "mediumpurple3" "mediumpurple4" "mediumseagreen" "mediumslateblue"
"mediumspringgreen" "mediumturquoise" "mediumvioletred" "midnight blue"
"midnightblue" "mint cream" "mintcream" "misty rose" "mistyrose" "mistyrose1"
"mistyrose2" "mistyrose3" "mistyrose4" "moccasin" "navajo white" "navajowhite"
"navajowhite1" "navajowhite2" "navajowhite3" "navajowhite4" "navy" "navy blue"
"navyblue" "old lace" "oldlace" "olive drab" "olivedrab" "olivedrab1" "olivedrab2"
"olivedrab3" "olivedrab4" "orange" "orange red" "orange1" "orange2" "orange3"
"orange4" "orangered" "orangered1" "orangered2" "orangered3" "orangered4"
"orchid" "orchid1" "orchid2" "orchid3" "orchid4" "pale goldenrod" "pale green"
"pale turquoise" "pale violet red" "palegoldenrod" "palegreen" "palegreen1"
"palegreen2" "palegreen3" "palegreen4" "paleturquoise" "paleturquoise1"
"paleturquoise2" "paleturquoise3" "paleturquoise4" "palevioletred" "palevioletred1"
"palevioletred2" "palevioletred3" "palevioletred4" "papaya whip" "papayawhip"
"peach puff" "peachpuff" "peachpuff1" "peachpuff2" "peachpuff3" "peachpuff4"
"peru" "pink" "pink1" "pink2" "pink3" "pink4" "plum" "plum1" "plum2" "plum3"
"plum4" "powder blue" "powderblue" "purple" "purple1" "purple2" "purple3"
"purple4" "red" "red1" "red2" "red3" "red4" "rosy brown" "rosybrown" "rosybrown1"
"rosybrown2" "rosybrown3" "rosybrown4" "royal blue" "royalblue" "royalblue1"
"royalblue2" "royalblue3" "royalblue4" "saddle brown" "saddlebrown" "salmon"
"salmon1" "salmon2" "salmon3" "salmon4" "sandy brown" "sandybrown" "sea green"
"seagreen" "seagreen1" "seagreen2" "seagreen3" "seagreen4" "seashell" "seashell1"
"seashell2" "seashell3" "seashell4" "sgi beet" "sgi bright gray" "sgi bright grey"
"sgi chartreuse" "sgi dark gray" "sgi dark grey" "sgi gray 0" "sgi gray 100"
"sgi gray 12" "sgi gray 16" "sgi gray 20" "sgi gray 24" "sgi gray 28" "sgi gray 32"
"sgi gray 36" "sgi gray 4" "sgi gray 40" "sgi gray 44" "sgi gray 48" "sgi gray 52"
"sgi gray 56" "sgi gray 60" "sgi gray 64" "sgi gray 68" "sgi gray 72" "sgi gray 76"
"sgi gray 8" "sgi gray 80" "sgi gray 84" "sgi gray 88" "sgi gray 92" "sgi gray 96"
"sgi grey 0" "sgi grey 100" "sgi grey 12" "sgi grey 16" "sgi grey 20" "sgi grey 24"
"sgi grey 28" "sgi grey 32" "sgi grey 36" "sgi grey 4" "sgi grey 40" "sgi grey 44"
"sgi grey 48" "sgi grey 52" "sgi grey 56" "sgi grey 60" "sgi grey 64" "sgi grey 68"
"sgi grey 72" "sgi grey 76" "sgi grey 8" "sgi grey 80" "sgi grey 84" "sgi grey 88"
"sgi grey 92" "sgi grey 96" "sgi light blue" "sgi light gray" "sgi light grey"
"sgi medium gray" "sgi medium grey" "sgi olive drab" "sgi salmon" "sgi slate blue"
"sgi teal" "sgi very dark gray" "sgi very dark grey" "sgi very light gray"
"sgi very light grey" "sgibeet" "sgibrightgray" "sgibrightgrey" "sgichartreuse"
"sgidarkgray" "sgidarkgrey" "sgigray0" "sgigray100" "sgigray12" "sgigray16"
"sgigray20" "sgigray24" "sgigray28" "sgigray32" "sgigray36" "sgigray4" "sgigray40"
"sgigray44" "sgigray48" "sgigray52" "sgigray56" "sgigray60" "sgigray64"
"sgigray68" "sgigray72" "sgigray76" "sgigray8" "sgigray80" "sgigray84" "sgigray88"
"sgigray92" "sgigray96" "sgigrey0" "sgigrey100" "sgigrey12" "sgigrey16"
"sgigrey20" "sgigrey24" "sgigrey28" "sgigrey32" "sgigrey36" "sgigrey4" "sgigrey40"
"sgigrey44" "sgigrey48" "sgigrey52" "sgigrey56" "sgigrey60" "sgigrey64"
"sgigrey68" "sgigrey72" "sgigrey76" "sgigrey8" "sgigrey80" "sgigrey84" "sgigrey88"
"sgigrey92" "sgigrey96" "sgilightblue" "sgilightgray" "sgilightgrey" "sgimediumgray"
"sgimediumgrey" "sgiolivedrab" "sgisalmon" "sgislateblue" "sgiteal" "sgiverydarkgray"
"sgiverydarkgrey" "sgiverylightgray" "sgiverylightgrey" "sienna" "sienna1"
"sienna2" "sienna3" "sienna4" "sky blue" "skyblue" "skyblue1" "skyblue2"
"skyblue3" "skyblue4" "slate blue" "slate gray" "slate grey" "slateblue"
"slateblue1" "slateblue2" "slateblue3" "slateblue4" "slategray" "slategray1"
"slategray2" "slategray3" "slategray4" "slategrey" "snow" "snow1" "snow2"
"snow3" "snow4" "spring green" "springgreen" "springgreen1" "springgreen2"
"springgreen3" "springgreen4" "steel blue" "steelblue" "steelblue1" "steelblue2"
"steelblue3" "steelblue4" "tan" "tan1" "tan2" "tan3" "tan4" "thistle" "thistle1"
"thistle2" "thistle3" "thistle4" "tomato" "tomato1" "tomato2" "tomato3"
"tomato4" "turquoise" "turquoise1" "turquoise2" "turquoise3" "turquoise4"
"violet" "violet red" "violetred" "violetred1" "violetred2" "violetred3"
"violetred4" "wheat" "wheat1" "wheat2" "wheat3" "wheat4" "white" "white smoke"
"whitesmoke" "yellow" "yellow green" "yellow1" "yellow2" "yellow3" "yellow4"
"yellowgreen")
(@12 [1] 888)
