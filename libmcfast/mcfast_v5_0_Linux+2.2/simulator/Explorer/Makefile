#!smake
# Makefile generated by cximake - do not edit!
# $XConsortium: cximake.c,v 1.55 91/01/04 19:56:26 gildea Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

# -------------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl,v 1.94 91/02/23 17:30:17 keith Exp $
#
# Platform-specific parameters may be set in the appropriate .cf
# configuration files.  Site-wide parameters may be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor does not define any unique symbols, you will need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make Makefile", "make Makefiles", or "make World").
#
# If you absolutely cannot get imake to work, you will need to set the
# variables at the top of each Makefile as well as the dependencies at the
# bottom (makedepend will do this automatically).
#

# -------------------------------------------------------------------------
# platform-specific configuration parameters - edit sgi.cf to change

# Introduced Edison native C++ compiler in 5.3.

             C++C = $(TOOLROOT)/usr/bin/CC
              F77 = $(TOOLROOT)/usr/bin/f77
          LIBSPEC = $(TOOLROOT)/usr/sbin/libspec
           LORDER = $(TOOLROOT)/usr/bin/lorder
               NM = $(TOOLROOT)/usr/bin/nm
               PC = $(TOOLROOT)/usr/bin/pc
         SETMAGIC = $(TOOLROOT)/usr/sbin/setmagic
             SIZE = $(TOOLROOT)/usr/bin/size
            STRIP = $(TOOLROOT)/usr/bin/strip
          MKSHLIB = $(TOOLROOT)/usr/bin/mkshlib
         HOST_CC  = TOOLROOT= /usr/bin/cc
         HOST_C++ = TOOLROOT= /usr/bin/CC

     EXPLORER_TAG = 0x00010601
     MBUILDER_TAG = 0x00010600
      DSCRIBE_TAG = 0x00010602
       SGIINSTCMD = $(TOOLROOT)/sbin/install
      SGIINSTSKIP = -idb explorer.sw.skip
      SGIINSTTEST = -idb explorer_noship.test.test
SGIINSTTESTNOSHIP = -idb "explorer_noship.test.test noship"

       SGIINSTEOE = -idb explorer.sw.eoe
 SGIINSTEOENOSHIP = -idb "explorer.sw.eoe noship"
       SGIINSTDEV = -idb explorer.sw.dev
SGIINSTDEVNOSTRIP = -idb "explorer.sw.dev nostrip"
       SGIINSTMOD = -idb explorer.sw.modules
 SGIINSTMODNOSHIP = -idb "explorer.sw.modules noship"
    SGIINSTSGIMOD = -idb explorer.sw.sgi_modules
    SGIINSTUNSMOD = -idb explorer.sw.unsupported
       SGIINSTSRC = -idb explorer.sw.source
      SGIINSTDATA = -idb explorer.sw.data
      SGIINSTGEOS = -idb explorer.sw.data_geosphere
     SGIINSTLIB20 = -idb explorer.sw.2_0

    SGIINSTIRISGL = -idb explorer.sw.irisgl
 SGIINSTMANIRISGL = -idb explorer.man.irisgl

    SGIINSTOPENGL = -idb explorer.sw.opengl
 SGIINSTMANOPENGL = -idb explorer.man.opengl

      SGIINSTMMAN = -idb explorer.man.man
      SGIINSTMMOD = -idb explorer.man.modules
   SGIINSTMSGIMOD = -idb explorer.man.sgi_modules
   SGIINSTMUNSMOD = -idb explorer.man.unsupported
      SGIINSTMDOC = -idb explorer.man.doc
      SGIINSTMREL = -idb explorer.man.relnotes

      SGIINSTLEOE = -idb explorer.links.eoe
      SGIINSTLDEV = -idb explorer.links.dev

    SGIINSTLICNON = -idb explorer.license.daemons-nonsgi
 SGIINSTLICNONMAN = -idb explorer.license.daemons-nonsgi
     SGIINSTLICSG = -idb explorer.license.daemons
    SGIINSTLICMAN = -idb explorer.man.license

CRT1 = $(ROOT)/usr/lib/crt1.o
CRTN = $(ROOT)/usr/lib/crtn.o

.l.o:
	$(LEX) $(LFLAGS) $<
	$(CC) $(CFLAGS) -c lex.yy.c
	$(RM) lex.yy.c ; $(MV) lex.yy.o $@
.y.o:
	$(YACC) $(YFLAGS) $<
	$(CC) $(CFLAGS) -c y.tab.c
	$(RM) y.tab.c
	$(MV) y.tab.o $@

# -------------------------------------------------------------------------
# site-specific configuration parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.25 91/02/13 11:59:58 rws Exp $

            SHELL = 	/bin/sh
           CSHELL = 		/bin/csh
              CSH = 		/bin/csh
              CAT = 		cat
              TOP = /usr/explorer
      CURRENT_DIR = /home/sim/scr1/cope/mcfast/Explorer_v26/mcfast/Explorer

  BOOTSTRAPCFLAGS =

               FC = $(TOOLROOT)/usr/bin/f77
      FDEBUGFLAGS =
          FCFLAGS =  $(FDEBUGFLAGS)

               AR = $(TOOLROOT)/usr/bin/ar
            MKLIB = $(TOOLROOT)/usr/bin/ar scr
              AWK = awk
               CC = $(TOOLROOT)/usr/bin/cc
            CHMOD = chmod
            CHOWN = chown
              COL = col -b -x
         COMPRESS = compress
               CP = cp
              CPP = /lib/cpp $(STD_CPP_DEFINES)
             ECHO = echo
             DATE = date
             GREP = grep
          INSTALL = $(ROOT)$(EXPLORERHOME)/bin/cxInst
               LD = $(TOOLROOT)/usr/bin/ld
              LEX = $(TOOLROOT)/usr/bin/lex -l $(ROOT)/usr/lib/lex/ncform
             LINT = $(TOOLROOT)/usr/bin/lint
      LINTLIBFLAG = -o
         LINTOPTS = -ax
               LN = ln -s
             MAKE = make
            MKDIR = mkdir
               MV = mv
            NROFF = /usr/bin/nroff -Tlp
    PREPROCESSCMD = $(TOOLROOT)/usr/bin/cc -E $(STD_CPP_DEFINES)
               RM = rm -f
              SED = sed
              TAG = $(TOOLROOT)/usr/sbin/tag
             TAGS = ctags
             TEST = test
         UUDECODE = uudecode
             YACC = $(TOOLROOT)/usr/bin/yacc -p $(ROOT)/usr/lib/yaccpar
           PSROFF = psroff
              PIC = pic
              TBL = tbl
              EQN = eqn
            EGREP = egrep
             TRUE = true
             PACK = pack

     STD_INCLUDES =
  STD_CPP_DEFINES = -DSYSV
      STD_DEFINES = -DSYSV -DMALLOC_0_RETURNS_NULL
 EXTRA_LOAD_FLAGS =
  EXTRA_LIBRARIES =

    SHAREDCODEDEF = -DSHAREDCODE
         SHLIBDEF = -DATTSHAREDLIB

    PROTO_DEFINES = -DFUNCPROTO -DNARROWPROTO

     INSTPGMFLAGS = -s $(SGIINSTALLFLAGS)

     INSTBINFLAGS = -m 0755 $(SGIINSTALLFLAGS)
     INSTUIDFLAGS = -m 4755 $(SGIINSTALLFLAGS)
     INSTLIBFLAGS = -m 0644 $(SGIINSTALLFLAGS)
     INSTINCFLAGS = -m 0444 $(SGIINSTALLFLAGS)
     INSTMANFLAGS = -m 0444 $(SGIINSTALLFLAGS)
     INSTDATFLAGS = -m 0444 $(SGIINSTALLFLAGS)
    INSTKMEMFLAGS = -m 4755     $(SGIINSTALLFLAGS)

          DESTDIR =

     TOP_INCLUDES = -I$(INCROOT)

      CDEBUGFLAGS = -O
        CCOPTIONS = -prototypes -cckr -float

      ALLINCLUDES = $(STD_INCLUDES) $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(PROTO_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS)
   LDCOMBINEFLAGS = -r

        MACROFILE = sgi.cf
           RM_CMD = $(RM) *.bak *.o core errs *.a *.i *.lst

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)

# -------------------------------------------------------------------------
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.100 91/02/23 20:10:08 rws Exp $

  SGIINSTALLFLAGS = $(SGIINSTSKIP)

# -------------------------------------------------------------------------
# X Window System make variables; this need to be coordinated with rules
# $XConsortium: Project.tmpl,v 1.100 91/02/23 20:10:08 rws Exp $

          PATHSEP = /
          INCROOT = $(DESTDIR)/usr/include
     BUILDINCROOT = $(TOP)
      BUILDINCTOP = ..
        CONFIGDIR = $(LIBDIR)/config

          MANPATH =  $(DESTDIR)/usr/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR =  $(MANSOURCEPATH)n
        LIBMANDIR =  $(MANSOURCEPATH)3
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

            IMAKE = cximake
           DEPEND = makedepend
        MKFONTDIR = mkfontdir
        MKDIRHIER = 	/bin/sh $(BINDIR)/cxmkdirhier

        CONFIGSRC = $(TOP)/config
           LIBSRC = $(TOP)/lib
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
           DOCSRC = $(TOP)/doc
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(CONFIGSRC)

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

# -------------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.88 91/02/22 17:37:09 rws Exp $

# -------------------------------------------------------------------------
# start of Imakefile

       MODULESRCS =
         TYPESRCS =
       EXPLORERHOME = /usr/explorer
   EXPLORERUSERHOME = .

# -----------------------------------------------------------------
# Beginning of Explorer.tmpl.
#
# Explanation to various ROOT symbols
#
#    TOOLROOT -- where the host "build" environment lives -- all
#                of the commands used to compile the system
#    ROOT -- where include files and libraries live, plus where
#            things get installed
#

# -------------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $DEF: Chopper Module Imake.rules, 91/05/13 $

SOCXLIBREV = 1.0

SOINVLIBREV = 1.0

# IRIS Explorer Version 3.0

         TOOLROOT =
        USRLIBDIR = $(DESTDIR)/usr/lib

           LIBAPI = -lcx
         LIBAPI_X = -lcxX -lSgm

    CXINVENTORLIBS = $(CXLIBDIR)/cxExplorerVisual.o -lInventorXt  -lgeometry   $(CXLIBDIR)/cxInventorPatch.o  -lInventor -lFL -lGLU -lGL -limage -lX11 -lXext -lm
    CXGEOMETRYLIB =  -lgeometry   $(CXLIBDIR)/cxInventorPatch.o  -lInventor -lFL -lGLU -lGL -limage -lX11 -lXext -lm

          LIBFXDS = $(FXDSLIB)
      LIBSTANDARD =        -lm
          LIBGLSW = 	-lgl -lX11 -lXext -lXi -lm
           LIBDGL = -ldgl
          LIBFMSW = -lfm
        LIBGLSTUB = -lglstub
        LIBFMSTUB = -lfmstub

            LIBGL = ${LIBGLSW}
            LIBFM = ${LIBFMSW}

      FORTRANLIBS =  -lF77 -lI77 -lU77 -lF77 -lisam

  EXTRA_LIBRARIES =

           INCDIR = $(ROOT)/usr/include
       ROOTINCDIR = -I$(INCDIR)
              C++ = $(TOOLROOT)/usr/bin/CC
        C++INCDIR = $(ROOT)/usr/include/CC
    ROOTC++INCDIR = -I$(C++INCDIR)

      STDFDEFINES =

    STD_DEFINES = -DSYSV -DMALLOC_0_RETURNS_NULL -DIRIX_5 -DMOTIF_1_2 -DINVENTOR2 -DX_11_R_6
    STDC++DEFINES = -DSYSV -D__C_PLUS_PLUS_3 -DIRIX_5 -DMOTIF_1_2 -DINVENTOR2 -DX_11_R_6 -DEDG_CMPLR=1

   EXTRA_INCLUDES = -I$(CXINCDIR) -I$(ROOT)$(EXPLORERUSERHOME)/include $(ROOTINCDIR)
   EXTRAC++INCLUDES = -I$(CXINCDIR) -I$(ROOT)$(EXPLORERUSERHOME)/include $(ROOTINCDIR) $(ROOTC++INCDIR)

  ALLLANGINCLUDES = $(MRESINCLUDES) $(INCLUDES)
      ALLINCLUDES = $(STD_INCLUDES) $(CINCLUDES) $(ALLLANGINCLUDES) $(EXTRA_INCLUDES)
   ALLC++INCLUDES = $(STD_INCLUDES) $(C++INCLUDES) $(ALLLANGINCLUDES) $(EXTRAC++INCLUDES)
     ALLFINCLUDES = $(STD_INCLUDES) $(FINCLUDES) $(ALLLANGINCLUDES) $(EXTRA_INCLUDES)

       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(PROTO_DEFINES) \
                    $(CDEFINES) $(DEFINES)
    ALLC++DEFINES = $(ALLC++INCLUDES) $(STDC++DEFINES) $(PROTO_DEFINES) \
                    $(C++DEFINES) $(DEFINES)
      ALLFDEFINES = $(ALLFINCLUDES) $(STDFDEFINES) $(PROTO_DEFINES) \
                    $(FDEFINES) $(DEFINES)

    C++DEBUGFLAGS = -O
     C++FRONTOPTS = +a1 +w +p
       C++OPTIONS = -cckr -float $(C++FRONTOPTS)
      CDEBUGFLAGS = -O
      FDEBUGFLAGS = -O
         FOPTIONS = -share_io
        CCOPTIONS = -prototypes -cckr -float
          C++FILT = $(TOOLROOT)/usr/lib/c++/c++filt

       ALLOPTIONS = $(CCOPTIONS) $(OPTIONS)
    ALLC++OPTIONS = $(C++OPTIONS) $(OPTIONS)
     ALLFCOPTIONS = $(FCOPTIONS) $(OPTIONS)

           CFLAGS = $(CDEBUGFLAGS) $(ALLOPTIONS) $(ALLDEFINES)
         C++FLAGS = $(C++DEBUGFLAGS) $(ALLC++OPTIONS) $(ALLC++DEFINES)
          FCFLAGS =  $(FDEBUGFLAGS) $(ALLFOPTIONS) $(ALLFDEFINES)

SHAREDSWITCH=

        LDOPTIONS = $(SHAREDSWITCH) $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS) -L   -L$(ROOT)/lib -L$(ROOT)/usr/lib
     C++LDOPTIONS = $(SHAREDSWITCH) $(C++DEBUGFLAGS) $(C++OPTIONS) $(LOCAL_LDFLAGS) -L   -L$(ROOT)/lib -L$(ROOT)/usr/lib

#
#  These constants describe the organization of the installation tree
#

           CXHOME = $(ROOT)$(CXHOME_INST)
           BINDIR = $(ROOT)$(BINDIR_INST)
         CXBINDIR = $(ROOT)$(CXBINDIR_INST)
         CXINCDIR = $(ROOT)$(CXINCDIR_INST)
       CXCXINCDIR = $(ROOT)$(CXCXINCDIR_INST)
      PROTOINCDIR = $(ROOT)$(PROTOINCDIR_INST)
         CXLIBDIR = $(ROOT)$(CXLIBDIR_INST)
      CXLIBSKMDIR = $(ROOT)$(CXLIBSKMDIR_INST)
      CXLIBXBMDIR = $(ROOT)$(CXLIBXBMDIR_INST)
     CXAPPLOADDIR = $(ROOT)$(CXAPPLOADDIR_INST)
        CXICONDIR = $(ROOT)$(CXICONDIR_INST)
     CXMODULETREE = $(ROOT)$(CXMODULETREE_INST)
      CXMODULEDIR = $(ROOT)$(CXMODULES_INST)
           CXAPPS = $(ROOT)$(CXAPPS_INST)
           CXMAPS = $(ROOT)$(CXMAPS_INST)
          CXTYPES = $(ROOT)$(CXTYPES_INST)
        CXSCRIBES = $(ROOT)$(CXSCRIBES_INST)
      CXCONFIGDIR = $(ROOT)$(CXCONFIGDIR_INST)
         CXSRCDIR = $(ROOT)$(CXSRCDIR_INST)
         CXDOCDIR = $(ROOT)$(CXDOCDIR_INST)
         CXMANDIR = $(ROOT)$(CXMANDIR_INST)
     CXLICENSEDIR = $(ROOT)$(CXLICENSEDIR_INST)
      XAPPLOADDIR = $(ROOT)$(XAPPLOADDIR_INST)
       SGIICONDIR = $(ROOT)$(SGIICONDIR_INST)

#
#  These symbols parallel the ones above, but without ROOT so that
#  they can be used as the target of "install" commands.
#
           CXHOME_INST = $(EXPLORERHOME)
           BINDIR_INST = ${CXHOME_INST}/bin
         CXBINDIR_INST = ${CXHOME_INST}/bin
         CXINCDIR_INST = $(CXHOME_INST)/include
       CXCXINCDIR_INST = $(CXHOME_INST)/include/cx
      PROTOINCDIR_INST = $(CXHOME_INST)/include/protocol
         CXLIBDIR_INST = $(CXHOME_INST)/lib
      CXLIBSKMDIR_INST = $(CXHOME_INST)/lib/skm
      CXLIBXBMDIR_INST = $(CXHOME_INST)/lib/xbm
     CXAPPLOADDIR_INST = $(CXLIBDIR_INST)/X11/app-defaults
        CXICONDIR_INST = $(CXLIBDIR_INST)/images
     CXMODULETREE_INST = $(CXLIBDIR_INST)/moduleTree
           CXMAPS_INST = $(CXHOME_INST)/maps
           CXAPPS_INST = $(CXHOME_INST)/apps
          CXTYPES_INST = $(CXHOME_INST)/types
        CXSCRIBES_INST = $(CXHOME_INST)/scribe
      CXCONFIGDIR_INST = $(CXHOME_INST)/config
         CXSRCDIR_INST = $(CXHOME_INST)/src
         CXDOCDIR_INST = $(CXHOME_INST)/doc
        CXMODULES_INST = $(CXHOME_INST)/modules
         CXMANDIR_INST = $(CXHOME_INST)/man
     CXLICENSEDIR_INST = $(CXHOME_INST)/license
      XAPPLOADDIR_INST = /usr/lib/X11/app-defaults
       SGIICONDIR_INST = /usr/lib/images
         CXUDTAPI_INST = $(CXLIBDIR_INST)
         CXUDTINC_INST = $(CXCXINCDIR_INST)

        DEPLIBAPI = $(CXLIBDIR)/libcx.so $(CXLIBDIR)/libcxX.so

#
#  These constants describe the organization of the source tree
#

  EXPLORERSOURCES = $(TOP)
           SRCTOP = $(TOP)
          BASETOP = $(TOP)/base
           CPELIB = $(SRCTOP)/base/sys/lib/cpe/libcpe.a
          CXUILIB = $(SRCTOP)/base/sys/lib/ui/libui.a
     CXSYSINCLUDE = $(SRCTOP)/base/sys/include
     CXSRCINCLUDE = $(SRCTOP)/base/include

        LIBSUBDIR = dso

         CXGENLIB = $(SRCTOP)/base/sys/lib/gen/$(LIBSUBDIR)/libcxgen.a
          CXDSLIB = $(SRCTOP)/base/sys/lib/ds/$(LIBSUBDIR)/libcxds.a
          FXDSLIB = $(SRCTOP)/base/sys/lib/fxds/$(LIBSUBDIR)/libfxds.a
       CXPFUNCLIB = $(SRCTOP)/base/sys/lib/pfunc/$(LIBSUBDIR)/libcxpfunc.a

   SRCGEOMETRYLIB = $(CXLIBDIR)/libgeometry.a
         IMAGELIB = $(CXLIBDIR)/libimagelib.a
   COMPATIMAGELIB = $(CXLIBDIR)/libimage.a
       CXPARAMLIB = $(CXLIBDIR)/libcxParameter.a
     CXLATTICELIB = $(CXLIBDIR)/libcxLattice.a
           APILIB = $(CXLIBDIR)/libapi.a
    FORTRANAPILIB = $(CXLIBDIR)/libfortranApi.a

            ILLIB = -lil -lgl -lX11 -lm -lC
            ILINC =
     GEOMETRYINCS =

#
# These constants define the NAG header files and libraries
#

        NAGLIBDIR      = /usr/local/lib
        NAGCINC        = -I/usr/local/include/Nag
        NAGCLIB        = -L$(NAGLIBDIR)   -lnagc
        NAGGRAPHICSLIB = -L$(NAGLIBDIR) -lnaggl04  -lnaghnsE -lnag

#  End of NAG definitions

            XCLIB = $(SRCTOP)/base/Xc/Xc/libXc.a
           XCMLIB = $(SRCTOP)/base/Xc/Xcm/libXcm.a
           XCXLIB = $(SRCTOP)/base/Xc/Xcx/libXcx.a

   CXCOPYRIGHTDIR = $(SRCTOP)/base/tools/copyrights
     CXCOPYRIGHTC = $(CXCOPYRIGHTDIR)/copyright.c
   CXCOPYRIGHTFOR = $(CXCOPYRIGHTDIR)/copyright.f

     GEOMETRYLIBS = -L${CXLIBDIR} ${CXGEOMETRYLIB} ${LIBGL}
     INVENTORLIBS = -L${CXLIBDIR} ${CXINVENTORLIBS}

       MKDIRFLAGS = -p -m 755
#        MKDIRHIER = 	/bin/sh $(SCRIPTSRC)/mkdirhier.sh
     INSTPGMFLAGS =  $(SGIINSTALLFLAGS)

        DEPENDSRC = ${CXBINDIR}

           CXINST = $(ROOT)$(EXPLORERHOME)/bin/cxInst

          MAN1DIR = /usr/share/catman/u_man/cat1/explorer
          MAN3DIR = /usr/share/catman/p_man/cat3/explorer
          MAN4DIR = /usr/share/catman/p_man/cat4/explorer

            IMAKE = ${CXBINDIR}/cximake

           CXMKMF = ${CXBINDIR}/cxmkmf
       MKAIXSHLIB = ${CXBINDIR}/mkAIXshlib
            CXC2F = ${CXLIBDIR}/c2f
     CXC2FPREPROC = ${CXLIBDIR}/c2fpreproc.sed
          CXTYPER = ${CXBINDIR}/cxtyper
         CXGENDOC = $(CXLIBDIR)/cxMbDoc
        CXGENHELP = $(CXLIBDIR)/cxMbMkHelp
      CXCVTBINARY = $(CXBINDIR)/cxbinary
     CXTYPEDRIVER = $(CXLIBDIR)/cxTypeMain.o
        CXAUTOAPI = ${CXLIBDIR}/AutoGenAPI
     CXAUTOAPITXT = ${CXLIBDIR}/AutoGenAPI.txt
        CXAUTOMAN = ${CXLIBDIR}/AutoGenMan
     CXAUTOMANTXT = ${CXLIBDIR}/AutoGenMan.txt
        CXTYPELIB = $(CXLIBDIR)/libtyper.a
        CXMETAOBJ = $(CXLIBDIR)/cxMetaType.meta.o

     CPLUSPLUSLIB = -lC

  CPLUSPLUSDEPLIB = $(ROOT)/usr/lib/libC.a

  CPLUSPLUSRTLIB=

# End of Explorer.tmpl.
# -----------------------------------------------------------------

# -------------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules

#######################################################################

#######################################################################

# ####################################################################
#  Define the MCW object and libraries we're dependent on.
#

   BLAS_LIBRARIES = -lblas
  EXTRA_LIBRARIES =

#
# The default setting
#

     MOD_MAIN_OBJ = ${CXLIBDIR}/cxMcw.o
   MOD_MAIN_OBJ_X = ${CXLIBDIR}/cxXMcw.o

#
# Used in building C modules, because they already have some C++ objects
# and need some C++ linkage help on SGI.
#

    MOD_MAIN_CTDT =
  MOD_MAIN_CTDT_X =

    CX_X_SYS_LIBS = -lXm -lXt -lX11 -lPW ${LIBGL}

         CXGENMDW = $(CXLIBDIR)/cxMdw

     MOD_LOC_LIBS = -L${CXHOME}/lib $(LIBAPI)
   MOD_LOC_LIBS_X = -L${CXHOME}/lib $(LIBAPI_X)

          DEPLIBS =
      MOD_DEPLIBS = ${DEPLIBAPI} ${TYPE_DEPLIBS} ${DEPLIBS}

     MOD_SYS_LIBS = -L${ROOT}${USRLIBDIR} ${LIBSTANDARD}

        TYPE_LIBS = -L${ROOT}$(EXPLORERUSERHOME)/lib -L.

DEFAULTMODULEIMAKE = Imakefile.default

      SGIINSTALLFLAGS = $(SGIINSTMOD)
SGIMODMANINSTALLFLAGS = $(SGIINSTMMOD)

# ####################################################################

default::	all

clobber::	clean
	${RM} Makedepend

Makefile::
	${CXMKMF} $(CXHOME) $(CURRENT_DIR)

SHELL = $(TOOLROOT)/bin/sh

.f.o:
	$(RM) $@
	$(FC) -c $(FCFLAGS) $*.f

.c.o:
	$(RM) $@
	$(CC) -c $(CFLAGS) $*.c

.SUFFIXES: .c++ .C .cc .i .yum
.c++.o:
	$(RM) $@
	$(C++) -c $(C++FLAGS) $*.c++
.c++.i:
	$(RM) $@
	$(C++) -E $(C++FLAGS) $*.c++ > $*.i
.c++.cc:
	$(RM) $@
	$(C++) -F $(C++FLAGS) $*.c++ > $*.cc
.c++.yum:
	$(RM) $@
	$(C++) -F $(C++FLAGS) $*.c++ | $(C++FILT) > $*.yum
.C.o:
	$(RM) $@
	$(C++) -c $(C++FLAGS) $*.C
.C.i:
	$(RM) $@
	$(C++) -E $(C++FLAGS) $*.C > $*.i
.C.cc:
	$(RM) $@
	$(C++) -F $(C++FLAGS) $*.C > $*.cc
.C.yum:
	$(RM) $@
	$(C++) -F $(C++FLAGS) $*.C | $(C++FILT) > $*.yum

.SUFFIXES: .man .help .doc .mres .amres .fi .ascribe .scribe

.doc.man:
	$(CXGENDOC) -n $* > $*.man || $(RM) $*.man

.doc.help:
	@if $(TEST) -x $(NROFF);then \
	    $(CXGENDOC) -n $*| \
	    $(AWK) '$$1==".TH"{print ".PD";print ".nr IN 5n";next}{print}' | \
	    $(NROFF) -man | \
	    $(COL) > $*.help \
	;else \
	    $(CXGENDOC) -f $* > $*.help \
	;fi

.mres.doc:
	@if $(TEST) ! -f $*.doc ;  then \
	    $(CXGENDOC) $*; \
	fi

.fi.o:
	$(CPP) -P $(ALLDEFINES) < $*.fi > $*.cpp.f
	$(FC) -o $*.o -c  $(FCFLAGS) $*.cpp.f

.amres.mres:
	$(RM) $*.mres
	$(CXCVTBINARY) $*.amres > $*.mres || $(RM) $*.mres

.ascribe.scribe:
	$(RM) $*.scribe
	$(CXCVTBINARY) $*.ascribe > $*.scribe || $(RM) $*.scribe

.SUFFIXES: .z
.man.z:
	$(RM) $*.z ;\
	$(TOOLROOT)/usr/bin/man -d $< > ,$*;\
	$(TOOLROOT)/usr/bin/pack -f ,$*;\
	$(MV) ,$*.z $*.z

     CXMODULES_INST = $(EXPLORERUSERHOME)/modules
      CXMANDIR_INST = $(EXPLORERUSERHOME)/man
          CXCREDITS = $(CXLIBDIR_INST)/UserModule.credit
       TYPE_DEPLIBS =
       TYPE_DEPLIBS =
       TYPE_DEPLIBS =
       TYPE_DEPLIBS =
       TYPE_DEPLIBS =

#
# This default Imakefile fragment included in case the user doesn't have one.
#

install::
	$(MKDIRHIER) $(SGIINSTALLFLAGS) $(CXMODULES_INST)

all:: TraceLat

all:: TraceLat

all:: TraceLat.mres TraceLat.help

install:: TraceLat.help
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in TraceLat.help; do \
		(set -x; $(INSTALL) -c $(INSTDATFLAGS) $$i \
	${CXMODULES_INST}); \
	done

install:: TraceLat.mres
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in TraceLat.mres; do \
		(set -x; $(INSTALL) -c $(INSTBINFLAGS) $$i \
	${CXMODULES_INST}); \
	done

install::
	@if $(TEST) -f TraceLat.credit.uu; then \
	$(RM) TraceLat.credit ; \
	$(ECHO) $(UUDECODE) TraceLat.credit.uu ; \
	$(UUDECODE) TraceLat.credit.uu ; else exit 0 ; fi
	@if $(TEST) -f TraceLat.credit;then \
	$(ECHO) $(INSTALL) -c $(INSTDATFLAGS) TraceLat.credit $(CXMODULES_INST) ;\
	$(INSTALL) -c $(INSTDATFLAGS) TraceLat.credit $(CXMODULES_INST) ; \
	else $(MAKE) TraceLat.creditlink;fi

TraceLat.creditlink::
	$(TOOLROOT)/etc/install $(SGIINSTALLFLAGS) -f $(CXMODULES_INST) -lns $(CXCREDITS) TraceLat.credit

install::
	$(MKDIRHIER) $(SGIINSTALLFLAGS) $(CXMANDIR_INST)/man1

install:: TraceLat.man
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in TraceLat.man; do \
		(set -x; $(INSTALL) -c $(SGIMODMANINSTALLFLAGS) $$i $(CXMANDIR_INST)/man1); \
	done
clean::cleanModule
cleanModule::
	$(RM_CMD) "#"*
	$(RM) TraceLat.man TraceLat.z TraceLat.help *.cpp.f
	@if $(TEST) -f TraceLat.credit.uu;then $(RM) TraceLat.credit;else exit 0;fi
	@if $(TEST) -f TraceLat.amres;then $(RM) TraceLat.mres;else exit 0;fi
	@if $(TEST) -f TraceLat.ascribe;then $(RM) TraceLat.scribe;else exit 0;fi

TraceLat:  \
	 \
	${MOD_MAIN_OBJ_X} ${MOD_MAIN_CTDT_X} \
	TraceLat.cx.o TraceLat.mdw.o  \
	 TraceLat.o McfTrace.o McfPositionUtil.o xdr_cal_hits.o  \
	  \
	${MOD_DEPLIBS} \
	TraceLat.mres
	 $(RM) $@
	$(CC) -o $@  \
	 \
	${MOD_MAIN_OBJ_X} ${MOD_MAIN_CTDT_X} \
	TraceLat.cx.o TraceLat.mdw.o  \
	 TraceLat.o McfTrace.o McfPositionUtil.o xdr_cal_hits.o  \
	 $(LDOPTIONS)  \
	 \
	${TYPE_LIBS} $(CRNLIB)/libpacklib.a $(CRNLIB)/libmathlib.a $(FORTRANLIBS) /usr/lib/libsun.a /usr/lib/libftn.so $(MCFLIB)/libio.a $(MCFLIB)/libutil.a $(MCFLIB)/libdbin_mcfast.a $(MCFLIB)/libdst.a $(MCFLIB)/libio.a $(MCFLIB)/libdbin.a $(MCFLIB)/libFmcfio.a $(STDHEP_DIR)/lib/libstdhep.a $(INVENTORLIBS) ${MOD_LOC_LIBS_X} ${MOD_SYS_LIBS}  \
	${CX_X_SYS_LIBS}   $(LDLIBS)  \
	  $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) TraceLat

install:: TraceLat
	$(INSTALL) -c $(INSTPGMFLAGS)   TraceLat ${CXMODULES_INST}

TraceLat.mdw.o:	 TraceLat.mres ${CXGENMDW}
	${CXGENMDW} -mdw TraceLat
	${CC} ${CFLAGS} -c  TraceLat.mdw.c

TraceLat.cx.o:	 TraceLat.mres ${CXGENMDW}
	${CXGENMDW} -cx TraceLat
	${CC} ${CFLAGS} -c  TraceLat.cx.c

cleanModule::
	${RM}  TraceLat.mdw.c  TraceLat.cx.c

TraceLat_main:
	@$(ECHO)  \
	${MOD_MAIN_OBJ_X} ${MOD_MAIN_CTDT_X}
TraceLat_preobjs:
	@$(ECHO) \
	TraceLat.cx.o TraceLat.mdw.o
TraceLat_objs:
	@$(ECHO)  \
	 TraceLat.o McfTrace.o McfPositionUtil.o xdr_cal_hits.o
TraceLat_postobjs:
	@$(ECHO)  \

TraceLat_libraries:
	@$(ECHO)  \
	${TYPE_LIBS} $(CRNLIB)/libpacklib.a $(CRNLIB)/libmathlib.a $(FORTRANLIBS) /usr/lib/libsun.a /usr/lib/libftn.so $(MCFLIB)/libio.a $(MCFLIB)/libutil.a $(MCFLIB)/libdbin_mcfast.a $(MCFLIB)/libdst.a $(MCFLIB)/libio.a $(MCFLIB)/libdbin.a $(MCFLIB)/libFmcfio.a $(STDHEP_DIR)/lib/libstdhep.a $(INVENTORLIBS) ${MOD_LOC_LIBS_X}
TraceLat_syslibs:
	@$(ECHO) \
	 \
	${CX_X_SYS_LIBS}
TraceLat_language:
	@$(ECHO) C

all:: DetDisplay

all:: DetDisplay

all:: DetDisplay.mres DetDisplay.help

install:: DetDisplay.help
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in DetDisplay.help; do \
		(set -x; $(INSTALL) -c $(INSTDATFLAGS) $$i \
	${CXMODULES_INST}); \
	done

install:: DetDisplay.mres
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in DetDisplay.mres; do \
		(set -x; $(INSTALL) -c $(INSTBINFLAGS) $$i \
	${CXMODULES_INST}); \
	done

install::
	@if $(TEST) -f DetDisplay.credit.uu; then \
	$(RM) DetDisplay.credit ; \
	$(ECHO) $(UUDECODE) DetDisplay.credit.uu ; \
	$(UUDECODE) DetDisplay.credit.uu ; else exit 0 ; fi
	@if $(TEST) -f DetDisplay.credit;then \
	$(ECHO) $(INSTALL) -c $(INSTDATFLAGS) DetDisplay.credit $(CXMODULES_INST) ;\
	$(INSTALL) -c $(INSTDATFLAGS) DetDisplay.credit $(CXMODULES_INST) ; \
	else $(MAKE) DetDisplay.creditlink;fi

DetDisplay.creditlink::
	$(TOOLROOT)/etc/install $(SGIINSTALLFLAGS) -f $(CXMODULES_INST) -lns $(CXCREDITS) DetDisplay.credit

install::
	$(MKDIRHIER) $(SGIINSTALLFLAGS) $(CXMANDIR_INST)/man1

install:: DetDisplay.man
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in DetDisplay.man; do \
		(set -x; $(INSTALL) -c $(SGIMODMANINSTALLFLAGS) $$i $(CXMANDIR_INST)/man1); \
	done
clean::cleanModule
cleanModule::
	$(RM_CMD) "#"*
	$(RM) DetDisplay.man DetDisplay.z DetDisplay.help *.cpp.f
	@if $(TEST) -f DetDisplay.credit.uu;then $(RM) DetDisplay.credit;else exit 0;fi
	@if $(TEST) -f DetDisplay.amres;then $(RM) DetDisplay.mres;else exit 0;fi
	@if $(TEST) -f DetDisplay.ascribe;then $(RM) DetDisplay.scribe;else exit 0;fi

DetDisplay:  \
	 \
	${MOD_MAIN_OBJ_X} ${MOD_MAIN_CTDT_X} \
	DetDisplay.cx.o DetDisplay.mdw.o  \
	 Mcf_ExplorerModule.o Mcf_Explorer_ObjLib.o Mcf_Explorer_ObjAddExplorer.o McfShapeFill.o Mcf_Explorer_ObjAdd.o McfXlib.o McfGeomUtil.o xdr_cal_hits.o  \
	  \
	${MOD_DEPLIBS} \
	DetDisplay.mres
	 $(RM) $@
	$(CC) -o $@  \
	 \
	${MOD_MAIN_OBJ_X} ${MOD_MAIN_CTDT_X} \
	DetDisplay.cx.o DetDisplay.mdw.o  \
	 Mcf_ExplorerModule.o Mcf_Explorer_ObjLib.o Mcf_Explorer_ObjAddExplorer.o McfShapeFill.o Mcf_Explorer_ObjAdd.o McfXlib.o McfGeomUtil.o xdr_cal_hits.o  \
	 $(LDOPTIONS)  \
	 \
	${TYPE_LIBS} $(MCFLIB)/libio.a $(MCFLIB)/libdst.a $(MCFLIB)/libdbin_mcfast.a $(MCFLIB)/libdbin.a $(MCFLIB)/libgeneral.a $(STDHEP_DIR)/lib/libstdhep.a $(MCFLIB)/libFmcfio.a $(CRNLIB)/libpacklib.a $(CRNLIB)/libmathlib.a $(FORTRANLIBS) /usr/lib/libsun.a $(INVENTORLIBS) ${MOD_LOC_LIBS_X} ${MOD_SYS_LIBS}  \
	${CX_X_SYS_LIBS}   $(LDLIBS)  \
	  $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) DetDisplay

install:: DetDisplay
	$(INSTALL) -c $(INSTPGMFLAGS)   DetDisplay ${CXMODULES_INST}

DetDisplay.mdw.o:	 DetDisplay.mres ${CXGENMDW}
	${CXGENMDW} -mdw DetDisplay
	${CC} ${CFLAGS} -c  DetDisplay.mdw.c

DetDisplay.cx.o:	 DetDisplay.mres ${CXGENMDW}
	${CXGENMDW} -cx DetDisplay
	${CC} ${CFLAGS} -c  DetDisplay.cx.c

cleanModule::
	${RM}  DetDisplay.mdw.c  DetDisplay.cx.c

DetDisplay_main:
	@$(ECHO)  \
	${MOD_MAIN_OBJ_X} ${MOD_MAIN_CTDT_X}
DetDisplay_preobjs:
	@$(ECHO) \
	DetDisplay.cx.o DetDisplay.mdw.o
DetDisplay_objs:
	@$(ECHO)  \
	 Mcf_ExplorerModule.o Mcf_Explorer_ObjLib.o Mcf_Explorer_ObjAddExplorer.o McfShapeFill.o Mcf_Explorer_ObjAdd.o McfXlib.o McfGeomUtil.o xdr_cal_hits.o
DetDisplay_postobjs:
	@$(ECHO)  \

DetDisplay_libraries:
	@$(ECHO)  \
	${TYPE_LIBS} $(MCFLIB)/libio.a $(MCFLIB)/libdst.a $(MCFLIB)/libdbin_mcfast.a $(MCFLIB)/libdbin.a $(MCFLIB)/libgeneral.a $(STDHEP_DIR)/lib/libstdhep.a $(MCFLIB)/libFmcfio.a $(CRNLIB)/libpacklib.a $(CRNLIB)/libmathlib.a $(FORTRANLIBS) /usr/lib/libsun.a $(INVENTORLIBS) ${MOD_LOC_LIBS_X}
DetDisplay_syslibs:
	@$(ECHO) \
	 \
	${CX_X_SYS_LIBS}
DetDisplay_language:
	@$(ECHO) C

all:: TracePick

all:: TracePick

all:: TracePick.mres TracePick.help

install:: TracePick.help
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in TracePick.help; do \
		(set -x; $(INSTALL) -c $(INSTDATFLAGS) $$i \
	${CXMODULES_INST}); \
	done

install:: TracePick.mres
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in TracePick.mres; do \
		(set -x; $(INSTALL) -c $(INSTBINFLAGS) $$i \
	${CXMODULES_INST}); \
	done

install::
	@if $(TEST) -f TracePick.credit.uu; then \
	$(RM) TracePick.credit ; \
	$(ECHO) $(UUDECODE) TracePick.credit.uu ; \
	$(UUDECODE) TracePick.credit.uu ; else exit 0 ; fi
	@if $(TEST) -f TracePick.credit;then \
	$(ECHO) $(INSTALL) -c $(INSTDATFLAGS) TracePick.credit $(CXMODULES_INST) ;\
	$(INSTALL) -c $(INSTDATFLAGS) TracePick.credit $(CXMODULES_INST) ; \
	else $(MAKE) TracePick.creditlink;fi

TracePick.creditlink::
	$(TOOLROOT)/etc/install $(SGIINSTALLFLAGS) -f $(CXMODULES_INST) -lns $(CXCREDITS) TracePick.credit

install::
	$(MKDIRHIER) $(SGIINSTALLFLAGS) $(CXMANDIR_INST)/man1

install:: TracePick.man
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in TracePick.man; do \
		(set -x; $(INSTALL) -c $(SGIMODMANINSTALLFLAGS) $$i $(CXMANDIR_INST)/man1); \
	done
clean::cleanModule
cleanModule::
	$(RM_CMD) "#"*
	$(RM) TracePick.man TracePick.z TracePick.help *.cpp.f
	@if $(TEST) -f TracePick.credit.uu;then $(RM) TracePick.credit;else exit 0;fi
	@if $(TEST) -f TracePick.amres;then $(RM) TracePick.mres;else exit 0;fi
	@if $(TEST) -f TracePick.ascribe;then $(RM) TracePick.scribe;else exit 0;fi

TracePick:  \
	 \
	${MOD_MAIN_OBJ_X} ${MOD_MAIN_CTDT_X} \
	TracePick.cx.o TracePick.mdw.o  \
	 TracePick.o Mcf_Windows.o  \
	  \
	${MOD_DEPLIBS} \
	TracePick.mres
	 $(RM) $@
	$(CC) -o $@  \
	 \
	${MOD_MAIN_OBJ_X} ${MOD_MAIN_CTDT_X} \
	TracePick.cx.o TracePick.mdw.o  \
	 TracePick.o Mcf_Windows.o  \
	 $(LDOPTIONS)  \
	 \
	${TYPE_LIBS} $(MCFLIB)/libio.a $(MCFLIB)/libutil.a $(MCFLIB)/libdbin_mcfast.a $(MCFLIB)/libdst.a $(MCFLIB)/libdbin.a $(MCFLIB)/libFmcfio.a $(CRNLIB)/libpacklib.a $(CRNLIB)/libmathlib.a $(FORTRANLIBS) /usr/lib/libsun.a /usr/lib/libPW.a $(STDHEP_DIR)/lib/libstdhep.a /usr/lib/libftn.so $(INVENTORLIBS) ${MOD_LOC_LIBS_X} ${MOD_SYS_LIBS}  \
	${CX_X_SYS_LIBS}   $(LDLIBS)  \
	  $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) TracePick

install:: TracePick
	$(INSTALL) -c $(INSTPGMFLAGS)   TracePick ${CXMODULES_INST}

TracePick.mdw.o:	 TracePick.mres ${CXGENMDW}
	${CXGENMDW} -mdw TracePick
	${CC} ${CFLAGS} -c  TracePick.mdw.c

TracePick.cx.o:	 TracePick.mres ${CXGENMDW}
	${CXGENMDW} -cx TracePick
	${CC} ${CFLAGS} -c  TracePick.cx.c

cleanModule::
	${RM}  TracePick.mdw.c  TracePick.cx.c

TracePick_main:
	@$(ECHO)  \
	${MOD_MAIN_OBJ_X} ${MOD_MAIN_CTDT_X}
TracePick_preobjs:
	@$(ECHO) \
	TracePick.cx.o TracePick.mdw.o
TracePick_objs:
	@$(ECHO)  \
	 TracePick.o Mcf_Windows.o
TracePick_postobjs:
	@$(ECHO)  \

TracePick_libraries:
	@$(ECHO)  \
	${TYPE_LIBS} $(MCFLIB)/libio.a $(MCFLIB)/libutil.a $(MCFLIB)/libdbin_mcfast.a $(MCFLIB)/libdst.a $(MCFLIB)/libdbin.a $(MCFLIB)/libFmcfio.a $(CRNLIB)/libpacklib.a $(CRNLIB)/libmathlib.a $(FORTRANLIBS) /usr/lib/libsun.a /usr/lib/libPW.a $(STDHEP_DIR)/lib/libstdhep.a /usr/lib/libftn.so $(INVENTORLIBS) ${MOD_LOC_LIBS_X}
TracePick_syslibs:
	@$(ECHO) \
	 \
	${CX_X_SYS_LIBS}
TracePick_language:
	@$(ECHO) C

all:: TraceInfo

all:: TraceInfo

all:: TraceInfo.mres TraceInfo.help

install:: TraceInfo.help
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in TraceInfo.help; do \
		(set -x; $(INSTALL) -c $(INSTDATFLAGS) $$i \
	${CXMODULES_INST}); \
	done

install:: TraceInfo.mres
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in TraceInfo.mres; do \
		(set -x; $(INSTALL) -c $(INSTBINFLAGS) $$i \
	${CXMODULES_INST}); \
	done

install::
	@if $(TEST) -f TraceInfo.credit.uu; then \
	$(RM) TraceInfo.credit ; \
	$(ECHO) $(UUDECODE) TraceInfo.credit.uu ; \
	$(UUDECODE) TraceInfo.credit.uu ; else exit 0 ; fi
	@if $(TEST) -f TraceInfo.credit;then \
	$(ECHO) $(INSTALL) -c $(INSTDATFLAGS) TraceInfo.credit $(CXMODULES_INST) ;\
	$(INSTALL) -c $(INSTDATFLAGS) TraceInfo.credit $(CXMODULES_INST) ; \
	else $(MAKE) TraceInfo.creditlink;fi

TraceInfo.creditlink::
	$(TOOLROOT)/etc/install $(SGIINSTALLFLAGS) -f $(CXMODULES_INST) -lns $(CXCREDITS) TraceInfo.credit

install::
	$(MKDIRHIER) $(SGIINSTALLFLAGS) $(CXMANDIR_INST)/man1

install:: TraceInfo.man
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in TraceInfo.man; do \
		(set -x; $(INSTALL) -c $(SGIMODMANINSTALLFLAGS) $$i $(CXMANDIR_INST)/man1); \
	done
clean::cleanModule
cleanModule::
	$(RM_CMD) "#"*
	$(RM) TraceInfo.man TraceInfo.z TraceInfo.help *.cpp.f
	@if $(TEST) -f TraceInfo.credit.uu;then $(RM) TraceInfo.credit;else exit 0;fi
	@if $(TEST) -f TraceInfo.amres;then $(RM) TraceInfo.mres;else exit 0;fi
	@if $(TEST) -f TraceInfo.ascribe;then $(RM) TraceInfo.scribe;else exit 0;fi

TraceInfo:  \
	 \
	${MOD_MAIN_OBJ_X} ${MOD_MAIN_CTDT_X} \
	TraceInfo.cx.o TraceInfo.mdw.o  \
	 TraceInfo.o Mcf_Windows.o  \
	  \
	${MOD_DEPLIBS} \
	TraceInfo.mres
	 $(RM) $@
	$(CC) -o $@  \
	 \
	${MOD_MAIN_OBJ_X} ${MOD_MAIN_CTDT_X} \
	TraceInfo.cx.o TraceInfo.mdw.o  \
	 TraceInfo.o Mcf_Windows.o  \
	 $(LDOPTIONS)  \
	 \
	${TYPE_LIBS} $(MCFLIB)/libio.a $(MCFLIB)/libutil.a $(MCFLIB)/libdbin_mcfast.a $(MCFLIB)/libdst.a $(MCFLIB)/libdbin.a $(MCFLIB)/libFmcfio.a $(CRNLIB)/libpacklib.a $(CRNLIB)/libmathlib.a $(FORTRANLIBS) /usr/lib/libsun.a /usr/lib/libPW.a $(STDHEP_DIR)/lib/libstdhep.a /usr/lib/libftn.so $(INVENTORLIBS) ${MOD_LOC_LIBS_X} ${MOD_SYS_LIBS}  \
	${CX_X_SYS_LIBS}   $(LDLIBS)  \
	  $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) TraceInfo

install:: TraceInfo
	$(INSTALL) -c $(INSTPGMFLAGS)   TraceInfo ${CXMODULES_INST}

TraceInfo.mdw.o:	 TraceInfo.mres ${CXGENMDW}
	${CXGENMDW} -mdw TraceInfo
	${CC} ${CFLAGS} -c  TraceInfo.mdw.c

TraceInfo.cx.o:	 TraceInfo.mres ${CXGENMDW}
	${CXGENMDW} -cx TraceInfo
	${CC} ${CFLAGS} -c  TraceInfo.cx.c

cleanModule::
	${RM}  TraceInfo.mdw.c  TraceInfo.cx.c

TraceInfo_main:
	@$(ECHO)  \
	${MOD_MAIN_OBJ_X} ${MOD_MAIN_CTDT_X}
TraceInfo_preobjs:
	@$(ECHO) \
	TraceInfo.cx.o TraceInfo.mdw.o
TraceInfo_objs:
	@$(ECHO)  \
	 TraceInfo.o Mcf_Windows.o
TraceInfo_postobjs:
	@$(ECHO)  \

TraceInfo_libraries:
	@$(ECHO)  \
	${TYPE_LIBS} $(MCFLIB)/libio.a $(MCFLIB)/libutil.a $(MCFLIB)/libdbin_mcfast.a $(MCFLIB)/libdst.a $(MCFLIB)/libdbin.a $(MCFLIB)/libFmcfio.a $(CRNLIB)/libpacklib.a $(CRNLIB)/libmathlib.a $(FORTRANLIBS) /usr/lib/libsun.a /usr/lib/libPW.a $(STDHEP_DIR)/lib/libstdhep.a /usr/lib/libftn.so $(INVENTORLIBS) ${MOD_LOC_LIBS_X}
TraceInfo_syslibs:
	@$(ECHO) \
	 \
	${CX_X_SYS_LIBS}
TraceInfo_language:
	@$(ECHO) C

all:: DetPick

all:: DetPick

all:: DetPick.mres DetPick.help

install:: DetPick.help
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in DetPick.help; do \
		(set -x; $(INSTALL) -c $(INSTDATFLAGS) $$i \
	${CXMODULES_INST}); \
	done

install:: DetPick.mres
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in DetPick.mres; do \
		(set -x; $(INSTALL) -c $(INSTBINFLAGS) $$i \
	${CXMODULES_INST}); \
	done

install::
	@if $(TEST) -f DetPick.credit.uu; then \
	$(RM) DetPick.credit ; \
	$(ECHO) $(UUDECODE) DetPick.credit.uu ; \
	$(UUDECODE) DetPick.credit.uu ; else exit 0 ; fi
	@if $(TEST) -f DetPick.credit;then \
	$(ECHO) $(INSTALL) -c $(INSTDATFLAGS) DetPick.credit $(CXMODULES_INST) ;\
	$(INSTALL) -c $(INSTDATFLAGS) DetPick.credit $(CXMODULES_INST) ; \
	else $(MAKE) DetPick.creditlink;fi

DetPick.creditlink::
	$(TOOLROOT)/etc/install $(SGIINSTALLFLAGS) -f $(CXMODULES_INST) -lns $(CXCREDITS) DetPick.credit

install::
	$(MKDIRHIER) $(SGIINSTALLFLAGS) $(CXMANDIR_INST)/man1

install:: DetPick.man
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in DetPick.man; do \
		(set -x; $(INSTALL) -c $(SGIMODMANINSTALLFLAGS) $$i $(CXMANDIR_INST)/man1); \
	done
clean::cleanModule
cleanModule::
	$(RM_CMD) "#"*
	$(RM) DetPick.man DetPick.z DetPick.help *.cpp.f
	@if $(TEST) -f DetPick.credit.uu;then $(RM) DetPick.credit;else exit 0;fi
	@if $(TEST) -f DetPick.amres;then $(RM) DetPick.mres;else exit 0;fi
	@if $(TEST) -f DetPick.ascribe;then $(RM) DetPick.scribe;else exit 0;fi

DetPick:  \
	 \
	${MOD_MAIN_OBJ_X} ${MOD_MAIN_CTDT_X} \
	DetPick.cx.o DetPick.mdw.o  \
	 DetPick.o  \
	  \
	${MOD_DEPLIBS} \
	DetPick.mres
	 $(RM) $@
	$(CC) -o $@  \
	 \
	${MOD_MAIN_OBJ_X} ${MOD_MAIN_CTDT_X} \
	DetPick.cx.o DetPick.mdw.o  \
	 DetPick.o  \
	 $(LDOPTIONS)  \
	 \
	${TYPE_LIBS} $(CRNLIB)/libpacklib.a $(CRNLIB)/libmathlib.a $(FORTRANLIBS) /usr/lib/libsun.a /usr/lib/libPW.a $(INVENTORLIBS) ${MOD_LOC_LIBS_X} ${MOD_SYS_LIBS}  \
	${CX_X_SYS_LIBS}   $(LDLIBS)  \
	  $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) DetPick

install:: DetPick
	$(INSTALL) -c $(INSTPGMFLAGS)   DetPick ${CXMODULES_INST}

DetPick.mdw.o:	 DetPick.mres ${CXGENMDW}
	${CXGENMDW} -mdw DetPick
	${CC} ${CFLAGS} -c  DetPick.mdw.c

DetPick.cx.o:	 DetPick.mres ${CXGENMDW}
	${CXGENMDW} -cx DetPick
	${CC} ${CFLAGS} -c  DetPick.cx.c

cleanModule::
	${RM}  DetPick.mdw.c  DetPick.cx.c

DetPick_main:
	@$(ECHO)  \
	${MOD_MAIN_OBJ_X} ${MOD_MAIN_CTDT_X}
DetPick_preobjs:
	@$(ECHO) \
	DetPick.cx.o DetPick.mdw.o
DetPick_objs:
	@$(ECHO)  \
	 DetPick.o
DetPick_postobjs:
	@$(ECHO)  \

DetPick_libraries:
	@$(ECHO)  \
	${TYPE_LIBS} $(CRNLIB)/libpacklib.a $(CRNLIB)/libmathlib.a $(FORTRANLIBS) /usr/lib/libsun.a /usr/lib/libPW.a $(INVENTORLIBS) ${MOD_LOC_LIBS_X}
DetPick_syslibs:
	@$(ECHO) \
	 \
	${CX_X_SYS_LIBS}
DetPick_language:
	@$(ECHO) C

       MRESINCLUDES = -I$(STDHEP_DIR)/src/inc -I$(MCFSRC)/dst -I$(MCFSRC)/io -I$(MCFSRC)/event -I$(MCFIO_DIR)/src -I$(MCFIO_DIR)/src -I$(MCFSRC)/dbin_mcfast -I$(MCSRC)/io

       MODULESRCS =  TraceLat.mdw.c TraceLat.c McfTrace.c McfPositionUtil.c xdr_cal_hits.c DetDisplay.mdw.c Mcf_ExplorerModule.c Mcf_Explorer_ObjLib.c Mcf_Explorer_ObjAddExplorer.c McfShapeFill.c Mcf_Explorer_ObjAdd.c McfXlib.c McfGeomUtil.c TracePick.mdw.c TracePick.c Mcf_Windows.c TraceInfo.mdw.c TraceInfo.c DetPick.mdw.c DetPick.c

depend::
	$(DEPEND) -s "# DO NOT DELETE " -- $(ALLDEFINES) ${ALLC++INCLUDES} -- $(MODULESRCS) $(TYPESRCS)

# -------------------------------------------------------------------------
# common rules for all Makefiles - do not edit

emptyrule::

depend::

isntall::install

clean::
	$(RM_CMD) "#"*

clobber:: clean

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

# -------------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit
install::

install.man::

Makefiles::

includes::

# -------------------------------------------------------------------------
# dependencies generated by makedepend

