V2.3 Features                                P. McBride   4/11/96

Tracking for forward detectors and central detectors is supported.  

Supported Geometries:

CENTRAL:  Tracking devices with Cylindrical symmetries 

             barrel silicon
             Central Drift Chambers
             Cylindrical Volumes and boundaries for scattering material
             
-- contact P. McBride, P. Avery             

FORWARD:  Planar Tracking devices (perp. to Z axis)
             xy planar silicon
             forward tracking chambers
             Box Shaped Volumes and boundaries for scattering material
-- contact K. Sterner, M. Procario 

CALORIMETERS:  EM showers in EM calorimeters implemented 
             Hadronic showers will be available in the next version
             Clustering available in next release
-- contact J. Yarba

VERTEX ROUTINES:  in solenoid and no field
-- contact A. Boehnlein

DBIN:          input files
-- contact J. Yarba, T. Wenaus, P. McBride            
             

Combined Cylindrical and Planar Geometries are now available.                        
             
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
Command file

Commands that are accepted:
max_event       0         ! number of events to be processed
max_print       0         ! number of STDHEP events to be printed
 
file_geometry  file.geo          ! geometry file
file_in  file.evt or @file.fil   ! data file or file containing list of data files
background_in  back.evt          ! background data file(s)
file_out       file.out          ! name of output file

ranseed        0 0        ! random number seed -- get from time of day:     0 0 
                          !                    -- or input two integers:  200 12
                          
int_crossing              ! number of interactions per crossing
generate_internal         ! generate particles internally
end generate

fcon           R          ! user defined  -- real
icon           I          ! user defined  -- integer
luminosity    1.E32       ! luminosity  -- not currently used
runtime       1.E7        ! run time    -- not currently used

trigger                   ! input trigger commands -- 
end trigger               ! see ~mcfast/doc/mcfast_trigger.doc


dbg_trace  subsytem   F   ! debug trace flag
dbg_hist subsytem     F   ! debug histogram flag

make_decays           T   ! generate decays in flight
make_pair_convert     T   ! generate pair conversions
make_hits             T   ! make hits -- default



----------------------------------------------------------------------------------
----------------------------------------------------------------------------------


Geometry input

There have been major changes to the geometry files:

PLEASE SEE geometry files in ~bphyslib/v2.3/example/*.db

-- contact J. Yarba

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

Vertex routines

To use the fitting routines, the user fills the track_kine bank 
(~bphyslib/test/inc/track_kine.inc) with tracks (either from 
offline tracks or HEP tracks) and calls the fitting routines.  

Source exists in ~bphyslib/mcfast/v2.0/src/vertex
See ~bphyslib/v2.0/doc/vertex.doc

-- contact A. Boehnlein, P. Avery
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

Machine independent Input and Output of structures
-- contact P. Lebrun/A. Boehnlein
 
Switches have been added to MCFAST to enable the input of MCFIO events
from the framework as well as to initialize and close MCFIO output files.
This implementation only uses the STDHEP common for input and output and
only opens a single stream for output.  The MCFIO package is much more
comprehensive than is currently represented in MCFAST. For documention
on the MCFIO package see "MCFio: A machine independent i/o system for
Monte-Carlo studies", P. Lebrun.

For output:

in your .CMD file, add the following command:
mcfio_out my_output_filename

This will alert MCFAST to open the file expecting one block.

Currently, MCFAST does not handle the actual writing out of events expecting
instead that the user would prefer to output the events conditionally.
A usable example of writing out the events can be found in the routine

~bphyslib/mcfast/dev/src/user/usr_mcfio_out.F 

This routine is used in the following way and will output the STDHEP block.

  if(condition) then
    call usr_mcfio_out
  endif

The file will automatically be closed at the end of the job.

For input:

for signal files: 

in your .CMD file add the following lines

file_type 1
file_in my_input_filename  OR
file_in @my_filelist.fil

The file_type command alerts MCFAST to expect MCFIO input (file_type 0
is for STDHEP standard input and is the default).

Remember to turn off vertex smearing in the .DB file if you are using
as input a file written from MCFAST.  Additionally, if tracking will be
re-done on the events, remember to turn off conversions and decays in your
.CMD file:

make_pair_convert false
make_decay false

For background files:

background_type 1
background_in my_background_filename
background_in @my_background_list.fil
