MCFAST with forward and central tracking

The version v2.0 release of MCFAST contained a complete rewrite of the
tracking code.  The techniques are similar to those used in v1.4.1 which
was based on the program TRACKERR.  More complete documentation on the 
fitting method used in v2.0 can be found in ~bphys/docs/avery.

The tracking code takes charged tracks from the HEP event list and 
returns a smeared tracks based on detector material and resolution.


TRACKING -- The tracking is under user control.

To set up tracking, modify the following routines:

usr_before_trigger.F  -- 

The function trk_trace_param will execute the trace of particles on 
an ideal trajectory (no scattering)

status =  trk_trace_param(hep)
                        COMBINED GEOMETRIES ARE NOW IMPLEMENTED in V2.3
                        
                        
usr_analysis.F  --   To generate smeared tracks, add a call to trk_offline.


Track tracing

All stable particles except neutrinos are traced through the detector.  
By default, hits are generated in each active detector layer, decays in flight and
conversions are included.  Tracks are traced until they decay or exit the
tracking volume.  In version v2.3, the tracing can be done through
concentric cylinders and through planes along the Z axis.  



There are three options for track smearing

trk_fit_ctk.F        -- to be used with a solenoidal field and cylindical
			geometry-- tracks through cylinders. 
                        
trk_fit_ftk.F        --  forward collider and fixed target geometries
                          tracking through z-planes and dipoles 

trk_fit_wtk.F  -- uses wtk representation and a 7 x 7 covariance matrix
                        in the fitting procedure -- for general geometries
                        This method is SLOW (and the default if no detector type
                        is specified).
                        
Inside the routine USR_ANALYSIS the user determines the number of tracks to be fit(NTRK)
and a track list(LIST).  By default, all stable charged tracks will be fitted.  
Output of the fitting can be found in the offline track list TRK_OFF which 
contains smeared track information projected to the production point and the track 
covariance matrix in the (7,7) WTK parametrization.  

Smearing tracks in a general detector:  (cylinders and z planes)                                                   
  1)include in the geometry file the following command:
        Detector 'Name_of_Detector' 'COMBINED'
  2)call trk_offline from your routine usr_analysis
        
       CALL TRK_OFFLINE(ntrk,list)
       
This routine calls the track fitting routine: TRK_FIT_WTK  (default)                         


WTK track parametrization ( momentum and position):
         px      !Px
         py      !Py
         pz      !Pz
         E       !E
         x       !x
         y       !y
         z       !z

  
Smearing tracks in a central detector:  (cylinders only)                                                   
  1)include in the geometry file the following command:
        Detector 'Name_of_Detector' 'CENTRAL'
  2)call trk_offline from your routine usr_analysis
        
       CALL TRK_OFFLINE(ntrk,list)
       
This routine calls the track fitting routine: TRK_FIT_CTK                          
                          
CTK representation:
   Helix track parametrization, useful in solenoidal field:
     
         cu     !1/2R
         phi0   !phi at PCA to reference point
         da     !DCA to reference point (signed)
         ct     !cot(theta)
         z0     !z - zref at PCA to reference point

   Equations of motion of track, assuming B field along z direction, are

       x = xp + (u0/rho)*sin(ps) - (v0/rho)*[1 - cos(ps)]
       y = yp + (v0/rho)*sin(ps) + (u0/rho)*[1 - cos(ps)]
       z = zp + ct*sperp

      Px = Px0*cos(ps) - Py0*sin(ps)
      Py = Py0*cos(ps) + Px0*sin(ps)
      Pz = Pz0

     where  (xp,yp,zp) is a point on the helix
             u0 = Px0 / Pt
             v0 = Py0 / Pt
             ct = Pz0 / Pt
            (Px0,Py0,Pz0) is the momentum at (xp,yp,zp)
             rho = 2 * cu = 1/R
             sperp = arc length in r-phi plane from (xp,yp,zp)
             ps  = rho * sperp

     When (xp,yp,zp) is the PCA to the reference point, they are given by

       xp = -da * v0 + xref
       yp = +da * u0 + yref
       zp = z0 + zref


Smearing tracks in a forward detector:  (z planes only)

  1)include in the geometry file the following command:
        Detector 'Name_of_Detector' 'FORWARD'
  2)call trk_offline from your routine usr_analysis
       CALL TRK_OFFLINE(ntrk,list)
       
This routine calls the track fitting routine: TRK_FIT_FTK
                          
Track parametrization in FTK form (forward track)

The parametrization expresses the x,y positions and their slopes
as a function of z. It is useful for the case where a particle moves
in the forward direction.

         alpha   !1/Pz
         xslp    !x' = dx/dz at z = zp (z position of reference plane)
         yslp    !y' = dy/dz at z = zp
         xp      !x at z = zp
         yp      !y at z = zp 


       
