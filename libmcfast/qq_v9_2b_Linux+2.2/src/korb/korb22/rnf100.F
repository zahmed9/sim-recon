*
* $Id$
*
* $Log$
* Revision 1.1  2000/06/19 20:00:28  eugenio
* Initial revision
*
* Revision 1.1.1.1  1994/11/22  16:57:02  zfiles
* first version of korb in CVS
*
*
#include "sys/CLEO_machine.h"
#include "pilot.h"
*CMZ :  2.00/00 21/01/93  15.42.14  by  Alan Weinstein
*-- Author :
      FUNCTION RNF100(IGEN)
C     *********************
C======================================================================
C======================================================================
C===================*** JMCLIB ***=====================================
C============= LIBRARY OF THE MONTE CARLO =============================
C================AND LORENTZ KINEMATICS================================
C==============THIS ROUTINES WILL BECOME===============================
C====================OBSOLETE !========================================
C==EG==ALL RANDOM GENERATOS SHOULD BE REPLACED BY RANMAR===============
C======================================================================
C             R N F 1 0 0
C THIS IS THE QUASIRANDOM SHUFFLING TYPE RANDOM NUMBER GENERATOR
C EQUIVALENT TO THAT IN FOWL CERN PROGRAM LIBRARY W-505.
C IT CONTAINS NGEN INDEPENDENT PARALLEL SUBGENERATORS INDEXED
C WITH THE PARAMETER IGEN ( GENERALLY NGEN.LE.100).
C RANDOM NUMBERS PASS THROUGH A BUFFER ( MATRIX BUFOR ) OF THE
C LENGHT NGEN*LENBUF IN ORDER TO KILL CORRELATIONS BETWEEN
C SUBGENERATORS. EVERY SUBGENNERATOR SHOULD SERVICE ONE INTEGRATION
C VARIABLE. INIRAN IS AN INITIALIZATION POSITIVE INTEGER PARAMETER
C COMMON TO ALL SUBGENERATORS.
C LENBUF SHOULD NOT BE LESS THEN NGEN.
C               ***  WARNING   ***
C THIS PARTICULAR VERSION IS LIMITED TO 20 SUBGENERATORS, FOR MORE
C ONE SHOULD EXTEND BUFOR AND LENBUF.
      IMPLICIT REAL*8(A-H,O-Z)
      COMMON /RNF/ INIRAN,NGEN
      DIMENSION BUFOR(800)
      DIMENSION KQCONS(100),QQCONS(100),SSER(100)
      DATA LENBUF/40/
      DATA KQCONS /
     *   2,   3,   5,   7,  11,  13,  17,  19,  23,  29,  31,
     *  37,  41,  43,  47,  53,  59,  61,  67,  71,  73,  79,
     *  83,  89,  97, 101, 103, 107, 109, 113, 127, 131, 137,
     * 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193,
     * 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,
     * 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317,
     * 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389,
     * 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457,
     * 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541/
      DATA IWARM /0/
 
      IF(IGEN.GT.0) GO TO 300
C INITIALISATION OR REINITIALISATION
      IF(IGEN.NE.-2) GO TO 910
      IF(NGEN.LE.0.OR.NGEN.GT.20) GOTO 920
      IF(INIRAN.LE.0) GOTO 930
      DUMX=RNDMD(-1)
      IWARM=1
      XLEN=FLOAT(LENBUF)
      DO 30 IGN=1,NGEN
      DXX=KQCONS(IGN)
      QQCONS(IGN)=SQRT(DXX)
      NDEX=LENBUF*(IGN-1)
      SER=INIRAN
      DO 29 K=1,LENBUF
      INDEX=NDEX+K
      BUFOR(INDEX)=MOD((SER*QQCONS(IGN)),1.D0)
   29 SER=SER+1.
   30 SSER(IGN)=SER
C AJWMOD to satisfy compiler:
      RNF100=0.
C AJWMOD End
      RETURN
 
C GENERATION OF THE RANDOM NUMBER
  300 CONTINUE
      IF(IGEN.GT.NGEN) GOTO 940
      IF(IWARM.EQ.0)   GOTO 950
      INDEX=LENBUF*(IGEN-1)+INT(XLEN*RNDMD(1))+1
      RNF100=BUFOR(INDEX)
      SER=SSER(IGEN)
      BUFOR(INDEX)=MOD((SER*QQCONS(IGEN)),1.D0)
      SSER(IGEN)=SER+1.
      RETURN
 
 910  PRINT 9100
 9100 FORMAT('  RNF100: WRONG IGEN ')
      STOP
 920  PRINT 9200
 9200 FORMAT('  RNF100: NGEN<1 OR NGEN>20 ')
      STOP
 930  PRINT 9300
 9300 FORMAT('  RNF100: INIRAN.LE.0 ')
      STOP
 940  PRINT 9400
 9400 FORMAT('  RNF100: IGEN>NGEN ')
      STOP
 950  PRINT 9500
 9500 FORMAT('  RNF100: LACK OF INITIALISATION')
      STOP
      END
