#
#
# $Header$
#

#
# This is a generic makefile used to build all the source in the
# current directory (anything with a .c, .cc, .cxx, .cpp or .F 
# suffix) into a library. This file is actually included by another
# file which implements the actual rule. The idea is that a given
# directory will contain source that represents a library,
# in which case Makefile.lib is included, or an executable,
# in which case Makefile.bin is included.
# 

.PHONY: mkdirs clean env all first

# The first target is made by default when make is invoked with no
# arguments. We want to include other targets here (namely, depends
# files) so we need to make a dummy target appear first that calls
# the real default target which resides in either Makefile.bin or
# Makefile.lib
first: all

ifndef OSNAME
OSNAME = $(shell uname)
endif

ifndef FC
FC		= g77
endif
ifndef CC
CC		= gcc
endif
ifndef CXX
CXX	= g++
endif

LIB_DIR		= $(HALLD_HOME)/lib/$(OSNAME)
BIN_DIR		= $(HALLD_HOME)/bin/$(OSNAME)
DEP_DIR		= .depends/$(OSNAME)

# Sometimes, one wants to build executables by linking to the common
# area libraries, but putting the executables in a local or private
# directory. This is handled by defining the HALLD_MY environment
# variable to point to the top level directory where the output should
# go. If HALLD_MY is not set, then everything defaults to HALLD_HOME.
ifdef HALLD_MY
	BIN_DIR		= $(HALLD_MY)/bin/$(OSNAME)
endif

FFLAGS   += -I. -I$(HALLD_HOME)/src/include -I$(HALLD_HOME)/src/libraries/include
CFLAGS   += -I. -I$(HALLD_HOME)/src/include -I$(HALLD_HOME)/src/libraries/include
CXXFLAGS += -I. -I$(HALLD_HOME)/src/include -I$(HALLD_HOME)/src/libraries/include


# Include user specified package makefiles
BMS_PATH = $(HALLD_HOME)/src/BMS
PACKAGE_MAKEFILES = $(foreach name,$(subst :, ,$(PACKAGES)),$(BMS_PATH)/Makefile.$(name))

ifdef PACKAGES
include $(PACKAGE_MAKEFILES)
endif

FSRC		= $(wildcard *.F *.f)
CSRC		= $(wildcard *.c)
CXXSRC	= $(wildcard *.cc *.cpp *.cxx)
OBJS		= $(addsuffix .o,$(basename $(FSRC) $(CSRC) $(CXXSRC)))
DEPS		= $(OBJS:.o=$(DEBUG_SUFFIX).d)

ifdef ONLINE
	CFLAGS += -DONLINE
	CXXFLAGS += -DONLINE
	LIBS += -let -lposix4 -lpthread
endif

ifdef DEBUG
	DEBUG_SUFFIX = _d
	FFLAGS   += -g -pg
	CFLAGS	+= -g -pg
	CXXFLAGS	+= -g -pg
endif


MODULE_NAME = $(shell basename $(shell pwd))
LIBNAME = $(LIB_DIR)/lib$(MODULE_NAME)$(DEBUG_SUFFIX).a

# Include platform specific definitions
# (the "-" at the front means don't error if the file doesn't exist)
-include $(HALLD_HOME)/src/BMS/Makefile.$(OSNAME)

# Include all dependancy files
-include $(foreach s,$(DEPS),$(DEP_DIR)/$s)

